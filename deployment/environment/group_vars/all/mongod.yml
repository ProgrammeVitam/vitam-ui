mongod_version: 4.0

# Directory for mongod input/output templates scripts
# Notes: currently database_scripts directory is given in deployment archive creation, it stays in tools/docker/mongo/
mongod_source_template_dir:  "{{lookup('env','PWD')}}/playbooks/templates/vitamui/script/mongod/"
mongod_output_template_dir:  "{{templates_dir }}/vitamui/script/mongod/"
mongod_output_dir_entry_point: "{{lookup('env','PWD')}}/../tools/docker/mongo/mongo-entrypoint"

######################################
# Databases scripts load order
mongodb_vitamuiScripts_version:
  - "1.0.0"
  - "1.0.1"

mongod_scripts_load_order:
  - "iam/1.0.0/create_users_ref.js.j2"     # first script mandatory
  - "iam/1.0.0/.*_ref.js"
  - "iam/1.0.0/.*_demo.js"
  - "iam/1.0.0/.*_dev.js"
  - "1.0.0/.*_ref.js"
  - "1.0.0/.*_demo.js"
  - "1.0.0/.*_dev.js"
  - "1.0.1/.*_ref.js"

mongo_files_excluded:
  - "nothing" # must have a value

######################################

# Accessible inside private network
mongod_listen_port: 27017
mongod_replicaset_name: rs0
mongod_cluster_hosts_list: "{% for host in groups['hosts-vitamui-mongod'] %}{{ hostvars[host].ip_service }}:{{mongod_listen_port}}{% if loop.index != loop.length %},{% endif %}{% endfor %}"
mongod_client_connect_timeout_ms: 2000

# Mongo database creation:
mongod_databases:
  mongo_db_admin:
    db: admin
    user: "{{ mongod_dbuser_admin }}"
    pwd:  "{{ mongod_dbpwd_admin }}"
    roles:  [{ role: "userAdminAnyDatabase", db: "admin" }, { role: "backup", db: "admin" }, { role: "restore", db: "admin" }, { role: "dbAdminAnyDatabase", db: "admin" }, { role: "readWriteAnyDatabase", db: "admin" }]

  mongo_db_security:
    db: security
    user: "{{ mongod_dbuser_security }}"
    # defined in vault
    pwd:  "{{ mongod_dbpwd_security }}"
    roles: [{ role: "readWrite", db: "security" }]

  mongo_db_iam:
    db: iam
    # defined in vault
    user: "{{ mongod_dbuser_iam }}"
    # defined in vault
    pwd: "{{ mongod_dbpwd_iam }}"
    roles: [{ role: "readWrite", db: "iam" }]

  mongo_db_cas:
    db: cas
    user: "{{ mongod_dbuser_cas }}"
    # defined in vault
    pwd: "{{ mongod_dbpwd_cas }}"
    roles: [{ role: "readWrite", db: "cas" }]
