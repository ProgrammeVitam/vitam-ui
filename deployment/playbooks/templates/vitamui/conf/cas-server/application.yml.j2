server:
  ssl:
    key-store: {{ service.dirs.config }}/cas-server.jks
    key-store-password: jkspasswd
    key-password: jkspasswd
  context-path: /
  host: {{ service.server_name }}
  port: {{ service.port }}


vitamui.cas.tenant.identifier: {{ vitamui_platform_informations.cas_tenant }}
vitamui.cas.identity: cas
iam-client:
  server-host: iam-external.service.consul
  server-port: {{ vitamui_services.iam_external.port }}
  secure: true
  ssl-configuration:
    keystore:
      key-path: {{ service.dirs.config }}/cas-server.jks
      key-password: jkspasswd
      type: JKS
    truststore:
      key-path: {{ service.dirs.config }}/truststore.jks
      key-password: jkspasswd
    hostname-verification: false


cas.authn.accept.users:


cas.messageBundle.baseNames: classpath:overriden_messages,classpath:messages


cas.tgc.secure: false
cas.tgc.crypto.enabled: false
cas.webflow.crypto.enabled: false
cas.authn.pac4j.cookie.crypto.enabled: true
cas.authn.pm.reset.crypto.enabled: true

cas.server.prefix: {{ service.url_prefix }}
login.url: ${cas.server.prefix}/login

cas.serviceRegistry.mongo.clientUri: "mongodb://{{ mongod_databases.mongo_db_cas.user}}:{{ mongod_databases.mongo_db_cas.pwd }}@{{ mongod_cluster_hosts_list }}/{{ mongod_databases.mongo_db_cas.db }}?replicaSet={{ mongod_replicaset_name }}&connectTimeoutMS={{ mongod_client_connect_timeout_ms }}"
#cas.serviceRegistry.mongo.host: {{ mongod_cluster_hosts_list }}
#cas.serviceRegistry.mongo.replicaSet: {{ mongod_replicaset_name }}
#cas.serviceRegistry.mongo.databaseName: {{ mongod_databases.mongo_db_cas.db }}
cas.serviceRegistry.mongo.collection: services
cas.serviceRegistry.mongo.userId: {{ mongod_databases.mongo_db_cas.user }}
cas.serviceRegistry.mongo.password: {{ mongod_databases.mongo_db_cas.pwd }}


cas.authn.surrogate.separator: ","
## Useless because of IamSurrogateRestAuthenticationService:
# cas.authn.surrogate.rest.url: xxx
# cas.authn.surrogate.rest.method: GET
cas.authn.surrogate.sms.attributeName: fakeNameToBeSureToFindNoAttributeAndNeverSendAnSMS


cas.authn.pm.enabled: true

## Useless because of IamRestPasswordManagementService:
# cas.authn.pm.rest.endpointUrlEmail: xxx
# cas.authn.pm.rest.endpointUrlSecurityQuestions: xxx
# cas.authn.pm.rest.endpointUrlChange: xxx

cas.authn.pm.policyPattern: {{ service.policy_pattern }}

cas.authn.pm.reset.mail.subject: Requete de reinitialisation de mot de passe
cas.authn.pm.reset.mail.text: "Changez de mot de passe via le lien: %s"
cas.authn.pm.reset.mail.from: serveur-cas@noreply.com
cas.authn.pm.reset.expirationMinutes: 10
cas.authn.pm.reset.mail.attributeName: xxx
cas.authn.pm.reset.securityQuestionsEnabled: false
cas.authn.pm.autoLogin: true

# Used to sign/encrypt the password-reset link
# cas.authn.pm.reset.crypto.encryption.key:
# cas.authn.pm.reset.crypto.signing.key:
# cas.authn.pm.reset.crypto.enabled: true


spring.mail.host: {{service.smtp_host}}
spring.mail.port: {{service.smtp_port}}
spring.mail.username: {{service.smtp_user}}
spring.mail.password: {{service.smtp_password}}
spring.mail.testConnection: {{service.test_smtp_connection}}
spring.mail.properties.mail.smtp.auth: true
spring.mail.properties.mail.smtp.starttls.enable: true


cas.authn.mfa.globalProviderId: mfa-sms


cas.authn.throttle.failure.threshold: 2
cas.authn.throttle.failure.rangeSeconds: 3


cas:
  logout:
    followServiceRedirects: true
    redirectParameter: next


cas.adminPagesSecurity.ip: .*
cas.monitor.endpoints.sensitive: false
cas.monitor.endpoints.enabled: true
endpoints.sensitive: false
endpoints.enabled: true
management.security.enabled: false


# for SMS:
cas.smsProvider.twilio.accountId: AC3942c2fee9478d0295b3051735860e3b
cas.smsProvider.twilio.token: 982e4b1cffaaaac491305d984d43df9f
mfa.sms.sender: "+33644602712"


vitamui.portal.url: https://{{ vitamui_services.ui_portal.server_name }}


token.api.cas: tokcas_ie6UZsEcHIWrfv2x


ip.header: X-Real-IP


# 8 hours in seconds
api.token.ttl: 28800


server-identity:
  identityName: {{ vitamui_env_name }}
  identityRole: {{ service.id }}
  identityServerId: 1


logging:
  config: {{ service.dirs.config }}/logback.xml
  level:
    org.reflections.Reflections: ERROR
    org.apereo.cas.web.CasWebApplication: INFO
    org.springframework.boot.autoconfigure.security: INFO
    org.jasig.cas.client: INFO
    org.apereo: INFO
    org.springframework.cloud: INFO
    org.springframework.amqp: OFF
    org.springframework.context.annotation: OFF
    org.springframework.boot.devtools: OFF
    org.apereo.cas.web.flow: INFO
    org.apereo.inspektr.audit.support: OFF
    fr.gouv.vitamui.cas: DEBUG
    org.elasticsearch.metrics: DEBUG
    fr.gouv.vitamui.commons: DEBUG
