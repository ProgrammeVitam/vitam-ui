---

- name: Set mongo connection & credentials
  set_fact:
    mongo_connection: "--host {{ ip_service }} --port {{ mongodb.mongod_port }} --quiet"
    mongo_credentials: "-u {{ mongodb.admin.user }} -p {{ mongodb.admin.password }}"
  no_log: "{{ hide_passwords_during_deploy }}"
  tags: update_mongodb_configuration

# Detect if authentication is enabled
- name: Verify if authent is enabled
  command: "mongosh {{ mongo_connection }} {{ mongo_credentials }} --eval 'db.help();'"
  register: mongo_authent_enabled
  failed_when: false
  no_log: "{{ hide_passwords_during_deploy }}"
  tags: update_mongodb_configuration

- name: Disable mongo credentials as authent is not enabled
  set_fact:
    mongo_credentials: ""
  when: mongo_authent_enabled.rc != 0
  tags: update_mongodb_configuration

# Activate security on mongo instances
- name: Activate security on mongod instances
  blockinfile:
    dest: "{{ mongod_config_path }}/mongod.conf"
    insertafter: EOF
    block: |
      security:
        authorization: enabled
        clusterAuthMode: keyFile
        keyFile: "{{ mongod_config_path }}/keyfile"
  tags: update_mongodb_configuration

# Restart the mongo instances (to enable auth)
- name: "restart {{ mongodb.service_name | default('vitamui-mongod') }} service"
  service:
    name: "{{ mongodb.service_name | default('vitamui-mongod') }}"
    enabled: "{{ mongodb.at_boot | default(service_at_boot) }}"
    state: restarted
  delegate_to: "{{ item }}"
  with_items: "{{ groups['hosts_vitamui_mongod'] }}"
  tags: update_mongodb_configuration

# Make sure the service is open (mongod listening on 27017)
- name: "Wait for the service port {{ mongodb.mongod_port }} to be open"
  wait_for:
    host: "{{ ip_service }}"
    port: "{{ mongodb.mongod_port }}"
    timeout: "{{ vitamui_defaults.services.start_timeout }}"
  tags: update_mongodb_configuration
