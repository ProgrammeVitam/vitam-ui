---

- name: Check if authent is enabled
  command: "mongo {{ ip_service }}:{{ mongodb.mongod_port }}/admin -u {{ mongodb.admin.user }} -p {{ mongodb.admin.password }} --quiet --eval 'db.help()'"
  register: mongo_authent_enabled
  failed_when: false
  no_log: "{{ hide_passwords_during_deploy }}"
  tags:
    - update_mongodb_configuration

# Set mongo_no_auth facts

- name: Set default mongo facts
  set_fact:
    mongo_credentials: ""
    mongo_no_auth: false
  tags:
    - update_mongodb_configuration

- name: Set mongo_no_auth fact to true
  set_fact:
    mongo_no_auth: true
  when: "mongo_authent_enabled.rc != 0"
  tags:
    - update_mongodb_configuration

# When authentication is required, we set mongodb admin credentials
- name: Set mongodb authentication credentials
  set_fact:
    mongo_credentials: " -u {{ mongodb.admin.user }} -p {{ mongodb.admin.password }} --quiet"
  when: "mongo_authent_enabled.rc == 0"
  no_log: "{{ hide_passwords_during_deploy }}"
  tags:
    - update_mongodb_configuration

# Copy the mongodb scripts

- name: Copy the database scripts files
  template:
    src: "{{ item }}"
    dest: "{{ vitamui_defaults.folder.root_path }}/app/mongod/{{ item | basename | regex_replace('\\.j2$') }}"
    owner: "{{ vitamui_defaults.users.vitamuidb }}"
    group: "{{ vitamui_defaults.users.group }}"
    mode: "{{ vitamui_defaults.folder.conf_permission }}"
  with_fileglob:
    - "{{ role_path }}/templates/mongo-vitamui/*"
  tags:
    - update_mongodb_configuration

# Enable sharding for specific databases and collections

# - name: Enable the sharding
#   command: mongo {{ ip_service }}:{{ mongodb.mongos_port }}/admin {{ mongo_credentials }} {{ vitam_defaults.folder.root_path }}/app/mongos/enable-sharding.js
#   no_log: "{{ hide_passwords_during_deploy }}"
#   tags:
#     - update_mongodb_configuration

# Initiate the databases and the related users
# FIXME: use mongodb_user module which is curently in extras modules -> need to install pymongo on mongodb servers

- name: Create the users
  command: "mongo {{ ip_service }}:{{ mongodb.mongod_port }}/admin {{ mongo_credentials }} {{ vitamui_defaults.folder.root_path }}/app/mongod/users-{{ item }}.js"
  with_items:
    - admin
    - security
    - iam
    - cas
  no_log: "{{ hide_passwords_during_deploy }}"
  tags:
    - update_mongodb_configuration

# Activate security on mongo instances

# TODO: check if we can activate security by default and then create the users
#  (caution : it seems that we can only create one user while being anonymous after security enabling)


- name: Activate security on mongod instances
  blockinfile:
    dest: "{{ mongod_config_path }}/mongod.conf"
    insertafter: "# ansible managed security conf"
    block: |
      security:
        authorization: enabled
        clusterAuthMode: keyFile
        keyFile: "{{ mongod_config_path }}/keyfile"
  # delegate_to: "{{ item }}"
  # with_items: "{{ groups['hosts_vitamui_mongod'] }}"
  tags:
    - update_mongodb_configuration

# Restart the mongo instances (to enable auth)

- name: "restart {{ mongodb.service_name }} service"
  service:
      name: "{{ mongodb.service_name }}"
      enabled: true
      state: restarted
  delegate_to: "{{ item }}"
  with_items: "{{ groups['hosts_vitamui_mongod'] }}"
  tags:
    - update_mongodb_configuration


# Make sure the service is open (mongos listening on 27017)

- name: "Wait for the service port {{ mongodb.mongod_port }} to be open"
  wait_for:
    host: "{{ ip_service }}"
    port: "{{ mongodb.mongod_port }}"
    timeout: "{{ vitamui_defaults.services.start_timeout }}"
  tags:
    - update_mongodb_configuration

# # Initiate the databases (now we know that authentication is enabled)

- name: Initiate the databases
  command: "mongo {{ ip_service }}:{{ mongodb.mongod_port }}/admin -u {{ mongodb.admin.user }} -p {{ mongodb.admin.password }} --quiet {{ vitamui_defaults.folder.root_path }}/app/mongod/init-{{ item }}-database.js"
  with_items:
    - admin
    - security
    - iam
    - cas
  no_log: "{{ hide_passwords_during_deploy }}"
  tags:
    - update_mongodb_configuration

- name: Copy the database script files to Set_feature_compatibility
  template:
    src: "{{ item }}"
    dest: "{{ vitamui_defaults.folder.root_path }}/app/mongod/{{ item | basename | regex_replace('\\.j2$') }}"
    owner: "{{ vitamui_defaults.users.vitamuidb }}"
    group: "{{ vitamui_defaults.users.group }}"
    mode: "{{ vitamui_defaults.folder.conf_permission }}"
  with_fileglob:
    - "{{ role_path }}/templates/mongo-vitamui/set_feature_compatibility.js.j2*"
  tags:
    - update_mongodb_configuration

- name: "Set_feature_compatibility to {{ mongo_version }}"
  shell: "mongo {{ ip_service }}:{{ mongodb.mongod_port }}/admin -u {{ mongodb.admin.user }} -p {{ mongodb.admin.password }} --quiet  {{ vitamui_defaults.folder.root_path }}/app/mongod/set_feature_compatibility.js"
