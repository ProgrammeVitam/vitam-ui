---

- name: "Install {{ vitamui_struct.package_name | default(package_name) }} package"
  package:
    name: "{{ vitamui_struct.package_name| default(package_name)  }}"
    state: latest
  register: result
  retries: "{{ packages_install_retries_number }}"
  until: result is succeeded
  delay: "{{ packages_install_retries_delay }}"
  tags:
    - update_package_vitamui
  notify:
    - restart service
  when: force_vitamui_version is not defined

# Force a specific version to install (even downgrade)
- block:

  - name: "Install {{ vitamui_struct.package_name | default(package_name) }} package"
    apt:
      name: "{{ vitamui_struct.package_name | default(package_name) }}={{ force_vitamui_version }}"
      force: yes
      state: present
    register: result
    retries: "{{ packages_install_retries_number }}"
    until: result is succeeded
    delay: "{{ packages_install_retries_delay }}"
    tags: update_package_vitamui
    notify: restart service
    when: ansible_os_family == "Debian"

  - name: "Install {{ vitamui_struct.package_name | default(package_name) }} package"
    yum:
      name: "{{ vitamui_struct.package_name | default(package_name) }}-{{ force_vitamui_version }}"
      allow_downgrade : yes
      state: present
    register: result
    retries: "{{ packages_install_retries_number }}"
    until: result is succeeded
    delay: "{{ packages_install_retries_delay }}"
    tags: update_package_vitamui
    notify: restart service
    when: ansible_os_family == "RedHat"

  when: force_vitamui_version is defined

#### Configuration ####

- name: Check that the directories exist (must be removed when the RPM plugin will be patched)
  file:
    path: "{{ vitamui_defaults.folder.root_path | default('/vitamui') }}/{{ item }}/{{ vitamui_struct.vitamui_component }}"
    state: directory
    owner: "{{ vitamui_defaults.users.vitamui | default('vitamui') }}"
    group: "{{ vitamui_defaults.users.group | default('vitamui') }}"
    mode: "{{ vitamui_defaults.folder.folder_permission | default('0750') }}"
  with_items:
    - app
    - bin
    - conf
    - data
    - lib
    - log
    - script
    - tmp
  notify:
    - restart service

- name: Ensure that the sysconfig sub-directory exists
  file:
    path: "{{ vitamui_folder_conf }}/sysconfig"
    state: directory
    owner: "{{ vitamui_defaults.users.vitamui | default('vitamui') }}"
    group: "{{ vitamui_defaults.users.group | default('vitamui') }}"
    mode: "{{ vitamui_defaults.folder.folder_permission | default('0750') }}"
  notify:
    - restart service

- name: Create custom sub-directories
  file:
    path: "{{ item }}"
    state: directory
    owner: "{{ vitamui_defaults.users.vitamui | default('vitamui') }}"
    group: "{{ vitamui_defaults.users.group | default('vitamui') }}"
    mode: "{{ vitamui_defaults.folder.folder_permission | default('0750') }}"
  loop: "{{ vitamui_struct.dirs }}"
  when:
    - vitamui_struct.dirs is defined
    - vitamui_struct.dirs|length > 0
  notify:
    - restart service

- name: Deploy common configuration files in sysconfig subdir
  template:
    src: "{{ item }}.j2"
    dest: "{{ vitamui_folder_conf }}/sysconfig/{{ item }}"
    owner: "{{ vitamui_defaults.users.vitamui | default('vitamui') }}"
    group: "{{ vitamui_defaults.users.group | default('vitamui') }}"
    mode: "{{ vitamui_defaults.folder.conf_permission | default('0440') }}"
  with_items:
    - "java_opts"
  tags:
    - update_jvmoptions_vitamui
  notify:
    - restart service

- name: Deploy common configuration files
  template:
    src: "{{ item }}.j2"
    dest: "{{ vitamui_folder_conf }}/{{ item }}"
    owner: "{{ vitamui_defaults.users.vitamui | default('vitamui') }}"
    group: "{{ vitamui_defaults.users.group | default('vitamui') }}"
    mode: "{{ vitamui_defaults.folder.conf_permission | default('0440') }}"
  with_items:
    - "logback.xml"
  tags:
    - update_vitam_configuration

- name: Deploy specific configuration files
  template:
    src: "{{ item }}"
    dest: "{{ vitamui_folder_conf }}/{{ item | basename | regex_replace('\\.j2$') }}"
    owner: "{{ vitamui_defaults.users.vitamui | default('vitamui') }}"
    group: "{{ vitamui_defaults.users.group | default('vitamui') }}"
    mode: "{{ vitamui_defaults.folder.conf_permission | default('0440') }}"
  with_fileglob:
    - "{{ role_path }}/templates/{{ vitamui_struct.vitamui_component }}/*"
  no_log: "{{ hide_passwords_during_deploy }}"
  tags:
    - update_vitam_configuration
  notify:
    - restart service

- name: "Copy {{ vitamui_struct.service_name | default(service_name) }} jks keystore (server)"
  copy:
    src: "{{ inventory_dir }}/keystores/server/{{ inventory_hostname }}/keystore_{{ vitamui_struct.vitamui_component }}.jks"
    dest: "{{ vitamui_folder_conf }}/keystore_{{ vitamui_struct.service_name | default(service_name) }}.jks"
    owner: "{{ vitamui_defaults.users.vitamui | default('vitamui') }}"
    group: "{{ vitamui_defaults.users.group | default('vitamui') }}"
    mode: "{{ vitamui_defaults.folder.folder_permission | default('0750') }}"
  when: "( vitamui_struct.secure | default(secure) | lower == 'true' ) and ({{ lookup('pipe', 'test -f {{ inventory_dir }}/keystores/server/{{ inventory_hostname }}/keystore_{{ vitamui_struct.vitamui_component }}.jks || echo nofile') == \"\" }})"
  tags:
    - update_vitamui_certificates
  notify:
    - restart service

# Copy the trustore for all vitamui components in order to communicate between them.
- name: "Copy server truststore"
  copy:
    src: "{{ inventory_dir }}/keystores/server/truststore_server.jks"
    dest: "{{ vitamui_folder_conf }}/truststore_{{ vitamui_certificate_type }}.jks"
    owner: "{{ vitamui_defaults.users.vitamui | default('vitamui') }}"
    group: "{{ vitamui_defaults.users.group | default('vitamui') }}"
    mode: "{{ vitamui_defaults.folder.folder_permission | default('0750') }}"
  when:
    - vitamui_struct.secure | default(secure) | lower == 'true'
    - vitamui_certificate_type is defined
    - "vitamui_certificate_type|lower == 'server'"
    - "{{ lookup('pipe', 'test -f {{ inventory_dir }}/keystores/server/truststore_server.jks || echo nofile') == \"\" }}"
  tags:
    - update_vitamui_certificates
  notify:
    - restart service

# Copy the truststore for all external API in order to communicate with vitamui components (ui, external APIs, cas) and externals apps.
- name: "Copy external truststore"
  copy:
    src: "{{ inventory_dir }}/keystores/client-{{ vitamui_certificate_type }}/truststore_{{ vitamui_certificate_type }}.jks"
    dest: "{{ vitamui_folder_conf }}/truststore_{{ vitamui_certificate_type }}.jks"
    owner: "{{ vitamui_defaults.users.vitamui | default('vitamui') }}"
    group: "{{ vitamui_defaults.users.group | default('vitamui') }}"
    mode: "{{ vitamui_defaults.folder.folder_permission | default('0750') }}"
  when:
    - vitamui_struct.secure | default(secure) | lower == 'true'
    - vitamui_certificate_type is defined
    - "vitamui_certificate_type|lower == 'external'"
    - "{{ lookup('pipe', 'test -f {{ inventory_dir }}/keystores/client-{{ vitamui_certificate_type }}/truststore_{{ vitamui_certificate_type }}.jks || echo nofile') == \"\" }}"
  tags:
    - update_vitamui_certificates
  notify:
    - restart service

- name: "Execute sub-tasks for the component type: {{ vitamui_struct.vitamui_component_type }}"
  include_tasks: "{{ vitamui_struct.vitamui_component_type }}.yml"
  when: "{{ lookup('pipe', 'test -f {{ role_path }}/tasks/{{ vitamui_struct.vitamui_component_type }}.yml || echo nofile') == \"\" }}"

- name: "Execute sub-tasks for the component: {{ vitamui_struct.vitamui_component }}"
  include_tasks: "{{ vitamui_struct.vitamui_component }}.yml"
  when: "{{ lookup('pipe', 'test -f {{ role_path }}/tasks/{{ vitamui_struct.vitamui_component }}.yml || echo nofile') == \"\" }}"

- meta: flush_handlers
  tags:
    - always

- name: "Ensure {{ vitamui_struct.service_name | default(service_name) }} service is started"
  service:
    name: "{{ vitamui_struct.service_name | default(service_name) }}"
    state: started
    enabled: "{{ vitamui_struct.at_boot | default(at_boot) }}"
