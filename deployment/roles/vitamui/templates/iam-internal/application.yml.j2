spring:
  cloud:
    consul:
      enabled: true
      host: consul.service.{{ consul_domain }}
      discovery:
        preferIpAddress: true
        tags: {{ consul_tags }}
        instanceId:  {{ vitamui_struct.vitamui_component }}-${server.port}-${spring.cloud.client.hostname}
  data:
    mongodb:
      uri: "mongodb://{{ mongodb.iam.user }}:{{ mongodb.iam.password }}@{{ mongodb.host }}:{{ mongodb.mongod_port }}/{{ mongodb.iam.db }}?replicaSet={{ mongod_replicaset_name }}&connectTimeoutMS={{ mongod_client_connect_timeout_ms }}"

logging:
  config: {{ vitamui_folder_conf }}/logback.xml
  level:
    fr.gouv.vitamui.iam.internal.server: {{ vitamui_struct.log.vitamui_level }}

server:
  port: {{ vitamui_struct.port_service }}
{% if vitamui_struct.secure|lower == "true" %}
  ssl:
    key-store: {{ vitamui_folder_conf }}/keystore_{{ vitamui_struct.package_name }}.jks
    key-store-password: {{ password_keystore }}
    key-password: {{ password_keystore }}
    trust-store: {{ vitamui_folder_conf }}/truststore_{{ vitamui_certificate_type }}.jks
    trust-store-password: {{ password_truststore }}
    client-auth: need
{% endif %}
  tomcat:
    accesslog:
      enabled: "{{ vitamui_struct.jvm_log|lower }}"
      directory: "{{ vitamui_folder_log }}"

gdpr_alert_readonly: {{ vitamui_struct.gdpr_alert_readonly | default(true) }}

management:
  server:
    port: {{ vitamui_struct.port_admin }}
    ssl:
      enabled: false

server-identity:
  identityName: {{ vitamui_site_name }}
  identityRole: {{ vitamui_struct.vitamui_component }}
  identityServerId: 1

security:
  host: {{ vitamui.security_internal.host }}
  port: {{ vitamui.security_internal.port_service }}
{% if vitamui.security_internal.secure|lower == "true" %}
  secure: true
  ssl-configuration:
    keystore:
      key-path: {{ vitamui_folder_conf }}/keystore_{{ vitamui_struct.package_name }}.jks
      key-password: {{ password_keystore }}
      type: JKS
    truststore:
      key-path: {{ vitamui_folder_conf }}/truststore_{{ vitamui_certificate_type }}.jks
      key-password: {{ password_truststore }}
    hostname-verification: false
{% endif %}

login:
{% if vitamui.cas_server.base_url is defined %}
  url: {{ vitamui.cas_server.base_url }}
{% else %}
  url: {{ url_prefix }}/cas/login
{% endif %}


cas-client:
  server-host: {{ vitamui.cas_server.host }}
  server-port: {{ vitamui.cas_server.port_service }}
{% if vitamui.cas_server.secure|lower == "true" %}
  secure: true
  ssl-configuration:
    truststore:
      key-path: {{ vitamui_folder_conf }}/truststore_{{ vitamui_certificate_type }}.jks
      key-password: {{ password_truststore }}
    hostname-verification: false
{% endif %}

{% if vitamui.cas_server.base_url is defined %}
cas.reset.password.url: {{ vitamui.cas_server.reset_password_url }}
{% else %}
cas.reset.password.url: /cas{{ vitamui.cas_server.reset_password_url }}
{% endif %}

login.attempts.maximum.failures: {{ vitamui_struct.login_max_failure|default('5') }}
login.attempts.time.interval: {{ vitamui_struct.login_interval|default('20') }}

vitam.tenant.init.mandatory: true # true/false, see with Romain for further info ... later...

logbook:
  scheduling:
    enabled: {{ vitamui_struct.logbook.enabled|lower }}
    sendEventToVitamTasks:
      delay: {{ vitamui_struct.logbook.delay }}

customer.init.config.file: {{ vitamui_folder_conf }}/customer-init.yml

opentracing:
  jaeger:
    enabled: {{ opentracing.jaeger.enabled }}
    logSpans: {{ opentracing.jaeger.log_spans }}
    expandExceptionLogs: {{opentracing.jaeger.expand_exception_logs}}
    udp-sender:
      host: {{ opentracing.jaeger.udp_sender.host }}
      port: {{ opentracing.jaeger.udp_sender.port }}
