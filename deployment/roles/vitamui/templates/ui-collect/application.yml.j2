spring:
  cloud:
    consul:
      enabled: true
      host: consul.service.{{ consul_domain }}
      discovery:
        preferIpAddress: true
        tags: {{ consul_tags }}
        instanceId: {{ vitamui_struct.vitamui_component }}-${server.port}-${spring.cloud.client.hostname}
  servlet:
    multipart:
      max-file-size: -1
      max-request-size: -1

server:
  host: {{ vitamui.collect.host }}
  port: {{ vitamui.collect.port_service }}
{% if vitamui.collect.base_url is defined %}
  compression:
    enabled: true
    mime-types: text/html,text/xml,text/plain,text/css,text/javascript,application/javascript,application/json
    min-response-size: 1024
  servlet.context-path: /
  servlet.session.cookie.path: /
{% else %}
  servlet.context-path: /collect
  servlet.session.cookie.path: /collect
{% endif %}
  scheme: {% if vitamui.collect.secure | default(secure) | lower =='true' %}https{% else %}http{% endif %}

{% if vitamui_struct.secure | default(secure) | lower =='true' %}
  ssl:
    key-store: {{ vitamui_folder_conf }}/keystore_{{ vitamui_struct.service_name | default(service_name) }}.jks
    key-store-password: {{ password_keystore }}
    key-password: {{ password_keystore }}
    enabled-protocols: {{ssl_setting.enabled_protocols}}
    ciphers: {{ssl_setting.ciphers}}
  error:
    path: /error

{% endif %}
  tomcat:
    accesslog:
        enabled: "{{ vitamui_struct.accesslogs | default(accesslogs) | lower }}"
        directory: "{{ vitamui_folder_log }}"
        prefix: "accesslog-{{ vitamui_struct.vitamui_component}}"
        file-date-format: ".yyyy-MM-dd"
        suffix: ".log"

management:
  server:
    port: {{ vitamui_struct.port_admin }}
    ssl:
      enabled: false

logging:
    config: {{ vitamui_folder_conf }}/logback.xml

server-identity:
  identityName: {{ vitamui_site_name if groups['hosts_vitamui_consul_server'] | default([]) | length > 0 else vitam_site_name }}
  identityRole: {{ vitamui_struct.vitamui_component }}
  identityServerId: 1


ui-collect:
  platform-name: "{{ vitamui_platform_informations.platform_name }}"
  portal-logo: "{{ vitamui_platform_informations.theme.portal_logo }}"
  header-logo: "{{ vitamui_platform_informations.theme.header_logo }}"
  footer-logo: "{{ vitamui_platform_informations.theme.footer_logo }}"
  user-logo: "{{ vitamui_platform_informations.theme.user_logo }}"
  portal-message: "{{ vitamui_platform_informations.portal_message }}"
  portal-title: "{{ vitamui_platform_informations.portal_title }}"
  theme-colors:
    vitamui-primary: "{{ vitamui_platform_informations.theme.theme_colors.vitamui_primary }}"
    vitamui-secondary: "{{ vitamui_platform_informations.theme.theme_colors.vitamui_secondary }}"
    vitamui-tertiary: "{{ vitamui_platform_informations.theme.theme_colors.vitamui_tertiary }}"
    vitamui-header-footer: "{{ vitamui_platform_informations.theme.theme_colors.vitamui_header_footer }}"
    vitamui-background: "{{ vitamui_platform_informations.theme.theme_colors.vitamui_background }}"
  customer:
    technical-referent-email: "{{ vitamui_platform_informations.customer.technical_referent_email }}"
    website-url: "{{ vitamui_platform_informations.customer.website_url }}"
  iam-external-client:
    server-host: {{ vitamui.iam_external.host }}
    server-port: {{ vitamui.iam_external.port_service }}
{% if vitamui.iam_external.secure | default(secure) | lower == "true" %}
    secure: {{ vitamui.iam_external.secure | default(secure) | lower }}
    ssl-configuration:
      keystore:
        key-path: {{ vitamui_folder_conf }}/keystore_{{ vitamui_struct.service_name | default(service_name) }}.jks
        key-password: {{ password_keystore }}
        type: JKS
      truststore:
        key-path: {{ vitamui_folder_conf }}/truststore_{{ vitamui_certificate_type }}.jks
        key-password: {{ password_truststore }}
      hostname-verification: false
{%endif %}
  collect-external-client:
    server-host: {{ vitamui.collect_external.host }}
    server-port: {{ vitamui.collect_external.port_service }}
{% if vitamui.collect_external.secure | default(secure) | lower == "true" %}
    secure: {{ vitamui.collect_external.secure | default(secure) | lower }}
    ssl-configuration:
      keystore:
        key-path: {{ vitamui_folder_conf }}/keystore_{{ vitamui_struct.service_name | default(service_name) }}.jks
        key-password: {{ password_keystore }}
        type: JKS
      truststore:
        key-path: {{ vitamui_folder_conf }}/truststore_{{ vitamui_certificate_type }}.jks
        key-password: {{ password_truststore }}
      hostname-verification: false
{%endif %}
  referential-external-client:
    server-host: {{ vitamui.referential_external.host }}
    server-port: {{ vitamui.referential_external.port_service }}
{% if vitamui.referential_external.secure | default(secure) | lower == "true" %}
    secure: {{ vitamui.referential_external.secure | default(secure) | lower }}
    ssl-configuration:
      keystore:
        key-path: {{ vitamui_folder_conf }}/keystore_{{ vitamui_struct.service_name | default(service_name) }}.jks
        key-password: {{ password_keystore }}
        type: JKS
      truststore:
        key-path: {{ vitamui_folder_conf }}/truststore_{{ vitamui_certificate_type }}.jks
        key-password: {{ password_truststore }}
      hostname-verification: false
{%endif %}
  update-units-metadata-external-client:
    server-host: {{ vitamui.collect_external.host }}
    server-port: {{ vitamui.collect_external.port_service }}
{% if vitamui.collect_external.secure | default(secure) | lower == "true" %}
    secure: {{ vitamui.collect_external.secure | default(secure) | lower }}
    connect-time-out: {{ vitamui.collect_external.connect_timeout | default(30) }}
    read-time-out: {{ vitamui.collect_external.read_timeout | default(240000) }}
    write-time-out: {{ vitamui.collect_external.write_timeout | default(240000) }}
    ssl-configuration:
      keystore:
        key-path: {{ vitamui_folder_conf }}/keystore_{{ vitamui_struct.service_name | default(service_name) }}.jks
        key-password: {{ password_keystore }}
        type: JKS
      truststore:
        key-path: {{ vitamui_folder_conf }}/truststore_{{ vitamui_certificate_type }}.jks
        key-password: {{ password_truststore }}
      hostname-verification: false
{%endif %}

  assets: "{{ vitamui_defaults.folder.root_path | default('/vitamui') }}/conf/assets"
  base-url:
{% if vitamui.portal.base_url is defined %}
    portal: "{{ vitamui.portal.base_url }}"
{% else %}
    portal: "{{ url_prefix }}"
{% endif %}
{% if vitamui.collect.base_url is defined %}
    collect: "{{ vitamui.collect.base_url }}"
{% else %}
    collect: "{{ url_prefix }}/collect"
{% endif %}
  portal-categories:
{% for id, category in vitamui_defaults.portal_categories.items() %}
    {{ id }}:
      title: "{{ category.title }}"
      displayTitle: {{ category.displayTitle }}
      order: {{ category.order }}
{% endfor %}

ui:
{% if vitamui_struct.base_url is defined %}
  url: "{{ vitamui_struct.base_url }}"
{% else %}
  url: "{{ url_prefix }}/collect"
{% endif %}
  redirect-url: ${ui.url}/${ui-prefix}

cas:
{% if vitamui.cas_server.base_url is defined %}
  external-url: "{{ vitamui.cas_server.base_url}}"
{% else %}
  external-url: "{{ url_prefix }}/cas"
{% endif %}
  internal-url: {% if vitamui.cas_server.secure | default(secure) | lower == "true" %}https{% else %}http{% endif %}://{{ vitamui.cas_server.host }}:{{ vitamui.cas_server.port_service }}{% if vitamui.cas_server.base_url is undefined %}/cas{% endif %}

  callback-url: ${ui.url}/collect-api/callback
{% if vitamui.cas_server.secure | default(secure) | lower == "true" %}
  ssl:
    trust-store: {{ vitamui_folder_conf }}/truststore_{{ vitamui_certificate_type }}.jks
    trust-store-password: {{ password_truststore }}
    hostname-verification: {{ vitamui.cas_server.hostname_verification }}
{% endif %}

list-enable-external-identifiers:
  tenants:
{% if vitam_vars.functional_administration.vitam_tenants_usage_external is iterable %}
{% for tenant in vitam_vars.functional_administration.vitam_tenants_usage_external %}
{% if tenant.identifiers is defined %}
    {{ tenant.name }}:
{% for external in tenant.identifiers %}
      - {{ external }}
{% endfor %}
{% endif %}
{% endfor %}
{% endif %}

opentracing:
  jaeger:
    enabled: {{ opentracing.jaeger.enabled }}
    logSpans: {{ opentracing.jaeger.log_spans }}
    expandExceptionLogs: {{opentracing.jaeger.expand_exception_logs}}
    udp-sender:
      host: {{ opentracing.jaeger.udp_sender.host }}
      port: {{ opentracing.jaeger.udp_sender.port }}
