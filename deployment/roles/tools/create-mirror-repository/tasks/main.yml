---

- name: Create repository folders
  file:
    path: "{{ rpm_repo_directory }}"
    owner: "{{ user_repo }}"
    group: "{{ user_repo }}"
    recurse: yes
  tags:
    - never
    - install

- name: Create logs folder
  file:
    path: "/vitamuiroot/repos/logs/"
    owner: "{{ user_repo }}"
    group: "{{ user_repo }}"
    recurse: yes
  tags:
    - never
    - install

- name: Installing centos repository binaries
  yum:
    name: createrepo
    state: latest
  tags:
    - never
    - install

#
- name: Setup nginx server
  yum:
    name: nginx
    state: latest
  tags:
    - never
    - install

- name: Override nginx configuration
  template:
    src: templates/nginx.conf.j2
    dest: /etc/nginx/nginx.conf
  tags:
    - never
    - install

- name: Create nginx conf.d folder
  file:
    path: "/etc/nginx/conf.d"
    owner: "root"
    group: "root"
    recurse: yes
  tags:
    - never
    - install

- name: Add nginx configuration for local yum repository
  template:
    src: templates/osrepository.conf.j2
    dest: /etc/nginx/conf.d/osrepository.conf
  tags:
    - never
    - install

- name: Start nginx server
  service:
    name: nginx
    state: started
  tags:
    - never
    - install

#- name: open firewall http port
#  firewalld:
#    port: 80/tcp
#    zone: trusted
#    permanent: true
#    state: enabled

- name: Update vitam versions list
  template:
    src: templates/vitam_versions
    dest: /vitamuiroot/repos/public/
  tags:
    - never
    - install
    - update

- name: Get Vitam versions
  command: cat /vitamuiroot/repos/public/vitam_versions
  register: vitam_versions
  tags:
    - never
    - install
    - update

- name: Create vitamlocal.repo file
  file:
    path: /etc/yum.repos.d/vitamlocal.repo
    state: touch
    mode: u=rw,g=r,o=r
  tags:
    - never
    - install
    - update

- name: Create dynamic vitamlocal.repo
  blockinfile:
    path: /etc/yum.repos.d/vitamlocal.repo
    block: |
      [{{ item }}]
      baseurl = {{ vitam_remote_repository }}/{{ item }}
      enabled = 1
      gpgcheck = 0
      name = vitam os repository
    marker: "# {mark} ANSIBLE MANAGED BLOCK {{item}}"
  with_items: "{{ vitam_versions.stdout_lines }}"
  tags:
    - never
    - install
    - update

 ##FORCE REPO SYNC
- name: Force Sync vitamui repository (yum synchronization)
  shell: "createrepo --update {{ rpm_repo_directory }}/stable/ && reposync -g -l -d -m --repoid=stable --download-metadata --download_path={{ rpm_repo_directory }}"
  become_user: "{{ user_repo }}"
  tags:
    - never
    - sync_vitamui

- name: Force Sync Vitam repository (yum synchronization)
  shell: "createrepo --update {{ rpm_repo_directory }}/vitam/{{ vitam_version }} && reposync -g -l -d -m --repoid={{ vitam_version }} --download-metadata --download_path={{ rpm_repo_directory }}/vitam/"
  become_user: "{{ user_repo }}"
  tags:
    - never
    - sync_vitam
 #
 #
- name  : Remove user's crontab
  shell : crontab -r
  become_user: "{{ user_repo }}"
  tags:
    - never
    - install
    - update

- name: Add crontab for VitamUI (yum synchronization)
  cron:
    name: "Synchronize VitamUI yum repository"
    minute: "{{ cron_rule_vitamui_min }}"
    hour: "{{ cron_rule_vitamui_hour }}"
    weekday: "{{ cron_rule_vitamui_day }}"
    job: "createrepo --update {{ rpm_repo_directory }}/stable/ && reposync -g -l -d -m --repoid=stable --download-metadata --download_path={{ rpm_repo_directory }}"
    disabled: "no"
  become_user: "{{ user_repo }}"
  tags:
    - never
    - install
    - update

- name: Add crontab for Vitam (yum synchronization)
  cron:
    name: "Synchronize Vitam yum repository version:{{ item }}"
    minute: "{{ cron_rule_vitam_min }}"
    hour: "{{ cron_rule_vitam_hour }}"
    weekday: "{{ cron_rule_vitam_day }}"
    job: "createrepo --update {{ rpm_repo_directory }}/vitam/{{ item }} && reposync -g -l -d -m --repoid={{ item }} --download-metadata --download_path={{ rpm_repo_directory }}/vitam/"
    disabled: "no"
  with_items: "{{ vitam_versions.stdout_lines }}"
  become_user: "{{ user_repo }}"
  tags:
    - never
    - install
    - update

#########################
##UNINSTALL

#########################
#
##UNINSTALL
- name: Stop nginx server
  service:
    name: nginx
    state: started
  ignore_errors: yes
  tags:
    - never
    - uninstall

- name: Remove nginx server
  file:
    state: absent
    path: "/etc/nginx/"
  tags:
    - never
    - uninstall

- name: remove nginx package
  yum:
    name: nginx
    state: absent
  tags:
    - never
    - uninstall

- name: "Remove {{ rpm_repo_directory }}"
  file:
    state: absent
    path: "{{ rpm_repo_directory }}"
  tags:
    - never
    - uninstall
