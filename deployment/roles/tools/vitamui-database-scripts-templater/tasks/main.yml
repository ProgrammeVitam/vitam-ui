---

- name: Test directories
  stat:
    path: "{{ mongod_output_dir_entry_point_current }}/last"
  register: folders

- name: Create directories for first install
  file:
    path: "{{ mongod_output_dir_entry_point_current }}/{{ item }}"
    state: directory
  with_items:
    - "last"
    - "previous"
  when: not folders.stat.exists

- name: Move files for update DEV
  delegate_to: localhost
  shell: "cd {{ mongod_output_dir_entry_point_current }}; mv last/* previous/"
  when: deployLocalhost
  ignore_errors: true

- name: Move files for update deployment
  shell: "cd {{ mongod_output_dir_entry_point_current }}; mv last/* previous/"
  when: not deployLocalhost
  ignore_errors: true

# tasks file for vitamui-database-scripts-templater
- name: "List all templates files in source template dir {{ mongod_source_template_dir }} (jinja files included)"
  delegate_to: localhost
  vars:
    excluded: "{{ mongo_files_excluded }}"
  set_fact:
    mongod_source_template_files:  "{{ mongod_source_template_files + [ item.path ] }}"
  when:
    - item.state == 'file'
    - item.path not in excluded
  with_filetree:
    - "{{ mongod_source_template_dir_current }}"

- name: Sorts files list with boot order
  delegate_to: localhost
  set_fact:
    mongod_source_template_files_sorted: "{{ mongod_source_template_files_sorted + [item.1] | unique }}"
  when: item.1 is match(item.0) and item.2 in (item.1)
  #when: deployLocalhost and item.1 is match(item.0) and item.2 in (item.1)
  with_nested:
    - "{{ mongod_scripts_load_order }}"
    - "{{ mongod_source_template_files | sort(case_sensitive=False) }}"
    - "{{ mongodb_vitamuiScripts_version }}"

- name: Compute sprintf like for having right 0 padding in scripts index name ("%0[NB_DIGITS]d")
  delegate_to: localhost
  set_fact:
    nb_scripts_digits_sprintf:  "%0{{ mongod_source_template_files_sorted | length  | string | length }}d"

- name: Computes files templates immediately for DEV mongo-entrypoint
  delegate_to: localhost
  template:
    src: "{{ mongod_source_template_dir_current }}/{{ item.1 }}"
    dest: "{{ mongod_output_dir_entry_point_current }}/last/{{ nb_scripts_digits_sprintf | format(item.0|int) }}{{ mongod_scripts_template_path_replace_str }}{{ item.1  | replace('/',mongod_scripts_template_path_replace_str) | replace('.j2', '') }}"
  with_indexed_items: "{{ mongod_source_template_files_sorted | unique }}"
  when: deployLocalhost

- name: Computes files templates immediately for deployment mongo-entrypoint
  template:
    src: "{{ mongod_source_template_dir_current }}/{{ item.1}}"
    dest: "{{ mongod_output_dir_entry_point_current }}/last/{{ nb_scripts_digits_sprintf | format(item.0|int) }}{{ mongod_scripts_template_path_replace_str }}{{ item.1  | replace('/',mongod_scripts_template_path_replace_str) | replace('.j2', '') }}"
  with_indexed_items: "{{ mongod_source_template_files_sorted | unique }}"
  when: not deployLocalhost

- name: Read generated files in DEV
  delegate_to: localhost
  find:
    paths: "{{ mongod_output_dir_entry_point_current }}/last/"
    file_type: file
  when: deployLocalhost
  register: filesDEV

- name: Read generated files for deployment
  find:
    paths: "{{ mongod_output_dir_entry_point_current }}/last/"
    file_type: file
  when: not deployLocalhost
  register: filesPROD

# Docker use case
- name: Set list for versioning DEV
  vars:
    temp: "{{ mongod_output_dir_entry_point_current }}/last/"
    old_path: "{{ temp | replace( '/deployment/../', '/') }}"
  set_fact:
    mongod_addedScripts: "{{ filesDEV.files | map(attribute='path') | list | sort | replace( old_path, docker_data_path )}}"
  when: deployLocalhost

- name: Set list for versioning for deployment
  set_fact:
    mongod_addedScripts: "{{ filesPROD.files | map(attribute='path') | list | sort }}"
  when: not deployLocalhost

- name: Computes versioning and add to DEV mongo-entrypoint
  delegate_to: localhost
  template:
    src: "{{ mongod_source_template_dir_current }}/versioning.js.j2"
    dest: "{{ mongod_output_dir_entry_point_current }}/last/versioning.js"
  when: deployLocalhost

- name: Computes versioning and add to deployment mongo-entrypoint
  template:
    src: "{{ mongod_source_template_dir_current }}/versioning.js.j2"
    dest: "{{ mongod_output_dir_entry_point_current }}/last/versioning.js"
  when: not deployLocalhost
