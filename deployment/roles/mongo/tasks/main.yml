---

- name: "Install {{ package_name }} package"
  package:
    name: "{{ package_name }}"
    state: latest
  register: result
  retries: "{{ packages_install_retries_number }}"
  until: result is succeeded
  delay: "{{ packages_install_retries_delay }}"
  notify: restart mongod
  when: force_vitamui_version is not defined

# Force a specific version to install (even downgrade)
- block:

  - name: "Install {{ package_name }} package"
    apt:
      name: "{{ package_name }}={{ force_vitamui_version }}"
      force: yes
      state: present
    register: result
    retries: "{{ packages_install_retries_number | default(2) }}"
    until: result is succeeded
    delay: "{{ packages_install_retries_delay | default(10) }}"
    notify: restart mongod
    when: ansible_os_family == "Debian"

  - name: "Install {{ package_name }} package"
    yum:
      name: "{{ package_name }}-{{ force_vitamui_version }}"
      allow_downgrade : yes
      state: present
    register: result
    retries: "{{ packages_install_retries_number | default(2) }}"
    until: result is succeeded
    delay: "{{ packages_install_retries_delay | default(10) }}"
    notify: restart mongod
    when: ansible_os_family == "RedHat"

  when: force_vitamui_version is defined

- name: Disable mongod default service
  service:
    name: mongod
    state: stopped
    enabled: no

#### Configuration ####

- name: Check that the directories exists (must be removed when the RPM plugin will be patched)
  file:
    path: "{{ vitamui_defaults.folder.root_path | default('/vitamui') }}/{{ item }}/mongod"
    state: directory
    owner: "{{ vitamui_defaults.users.vitamuidb | default('vitamuidb') }}"
    group: "{{ vitamui_defaults.users.group | default('vitamui') }}"
    mode: "{{ vitamui_defaults.folder.folder_permission | default('0750') }}"
  with_items:
    - app
    - bin
    - conf
    - data
    - lib
    - log
    - script
    - tmp
  notify: restart mongod
  tags: update_mongodb_configuration

- name: Create db directory
  file:
    path: "{{ mongo_db_path }}"
    state: directory
    owner: "{{ vitamui_defaults.users.vitamuidb | default('vitamuidb') }}"
    group: "{{ vitamui_defaults.users.group | default('vitamui') }}"
    mode: "{{ vitamui_defaults.folder.folder_permission | default('0750') }}"
  notify: restart mongod
  tags: update_mongodb_configuration

- name: Create the mongod configuration server file
  template:
    src: mongod.conf.j2
    dest: "{{ mongo_config_path }}/mongod.conf"
    owner: "{{ vitamui_defaults.users.vitamuidb | default('vitamuidb') }}"
    group: "{{ vitamui_defaults.users.group | default('vitamui') }}"
    mode: "{{ vitamui_defaults.folder.conf_permission | default('0440') }}"
  notify: restart mongod
  tags: update_mongodb_configuration

#### Consul configuration ####

- name: Ensure consul config dir is OK
  file:
    path: "{{ consul.conf_folder | default('/vitam/conf/consul') }}"
    owner: "{{ vitamui_defaults.users.vitamui | default('vitamui') }}"
    group: "{{ vitamui_defaults.users.group | default('vitamui') }}"
    mode: "{{ vitamui_defaults.folder.folder_permission | default('0750') }}"
    state: directory
  tags:
    - consul_conf
    - update_mongodb_configuration

- name: Deploy consul agent service declaration
  template:
    src: "service-componentid.json.j2"
    dest: "{{ consul.conf_folder | default('/vitam/conf/consul') }}/service-mongod.json"
    owner: "{{ vitamui_defaults.users.vitamui | default('vitamui') }}"
    group: "{{ vitamui_defaults.users.group | default('vitamui') }}"
    mode: "{{ vitamui_defaults.folder.conf_permission | default('0440') }}"
  tags:
    - consul_conf
    - update_mongodb_configuration
  notify: reload consul configuration for mongo

# Ensure that the installation is complete and consul up before contnuing...
- meta: flush_handlers
  tags:
    - consul_conf
    - update_mongodb_configuration

- name: "Ensure {{ mongodb.service_name | default('vitamui-mongod') }} is started"
  service:
    name: "{{ mongodb.service_name | default('vitamui-mongod') }}"
    state: started
    enabled: "{{ mongodb.at_boot | default(service_at_boot) }}"
  tags: update_mongodb_configuration

#### Mongo online configuration ####
# Note : mongodb needs to be started for these elements to succeed

# Enable mongo passphrase

- name: Copy the passphrase
  template:
    src: keyfile.j2
    dest: "{{ mongo_config_path }}/keyfile"
    owner: "{{ vitamui_defaults.users.vitamuidb | default('vitamuidb') }}"
    group: "{{ vitamui_defaults.users.group | default('vitamui') }}"
    mode: 0600
  tags: update_mongodb_configuration

# # Now let's initiate the replica set
# # Do this only on the first node of the current shard
# # We have to wait for all the node to be up

- block:

    - name: Wait for the service port to be open on all members of the replica
      wait_for:
        host: "{{ hostvars[item]['ip_service'] }}"
        port: "{{ mongodb.mongod_port }}"
        timeout: "{{ vitamui_defaults.services.start_timeout }}"
      with_items:
        - "{{ groups['hosts_vitamui_mongod'] }}"
      tags:
        - update_mongodb_configuration

    - name: Copy the script which initiate the replica set
      template:
        src: init-replica.js.j2
        dest: "{{ vitamui_defaults.folder.root_path | default('/vitamui') }}/app/mongod/init-replica.js"
        owner: "{{ vitamui_defaults.users.vitamuidb | default('vitamuidb') }}"
        group: "{{ vitamui_defaults.users.group | default('vitamui') }}"
        mode: "{{ vitamui_defaults.folder.conf_permission | default('0440') }}"
      tags:
        - update_mongodb_configuration

    # - name: Copy script that restore configuration of mongod sharded cluster
    #   template:
    #     src: "restore-mongod.js.j2"
    #     dest: "{{ vitamui_defaults.folder.root_path | default('/vitamui') }}/app/mongod/restore-mongod.js"
    #     owner: "{{ vitamui_defaults.users.vitamuidb | default('vitamuidb') }}"
    #     group: "{{ vitamui_defaults.users.group | default('vitamui') }}"
    #     mode: "{{ vitamui_defaults.folder.conf_permission | default('0440') }}"
    #   tags:
    #     - update_mongodb_configuration

    - name: Initiate the replica set
      command: "mongo --host {{ ip_service }} --port {{ mongodb.mongod_port }} {{ vitamui_defaults.folder.root_path | default('/vitamui') }}/app/mongod/init-replica.js"
      tags:
        - update_mongodb_configuration

    - import_tasks: check_auth.yml

    # Create the local shard admin user
    - name: Copy the script which create the local users
      template:
        src: local-user.js.j2
        dest: "{{ vitamui_defaults.folder.root_path | default('/vitamui') }}/app/mongod/local-user.js"
        owner: "{{ vitamui_defaults.users.vitamuidb | default('vitamuidb') }}"
        group: "{{ vitamui_defaults.users.group | default('vitamui') }}"
        mode: "{{ vitamui_defaults.folder.conf_permission | default('0440') }}"
      tags:
        - update_mongodb_configuration

    - name: Create the local shard user
      command: "mongo --host {{ ip_service }}:{{ mongodb.mongod_port }} {{ mongo_credentials }} {{ vitamui_defaults.folder.root_path | default('/vitamui') }}/app/mongod/local-user.js"
      tags:
        - update_mongodb_configuration

  when: mongo_rs_bootstrap is defined and mongo_rs_bootstrap|lower == "true"
