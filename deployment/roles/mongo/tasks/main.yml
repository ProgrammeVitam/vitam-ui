---

- name: Install mongodb-org-server package
  package:
    name:
      - mongodb-org-server
    state: present
  register: result
  retries: "{{ packages_install_retries_number }}"
  until: result is succeeded
  delay: "{{ packages_install_retries_delay }}"
  notify: "mongo - restart service"

- name: Disable mongod default service
  service:
    name: mongod
    state: stopped
    enabled: no

- name: Deploy systemd service file for vitamui-mongod
  template:
    src: vitamui-mongod.service.j2
    dest: "{{ '/lib/systemd/system' if ansible_os_family == 'Debian' else '/usr/lib/systemd/system' }}/vitamui-mongod.service"
    owner: root
    group: root
    mode: "0644"
  notify: "mongo - restart service"

#### Configuration ####

- name: Check that the directories exists (must be removed when the RPM plugin will be patched)
  file:
    path: "{{ vitamui_defaults.folder.root_path | default('/vitamui') }}/{{ item }}/mongod"
    state: directory
    owner: "{{ vitamui_defaults.users.vitamuidb | default('vitamuidb') }}"
    group: "{{ vitamui_defaults.users.group | default('vitamui') }}"
    mode: "{{ vitamui_defaults.folder.folder_permission | default('0750') }}"
  with_items:
    - app
    - bin
    - conf
    - data
    - lib
    - log
    - script
    - tmp
  notify: "mongo - restart service"
  tags: update_mongodb_configuration

- name: Create db directory
  file:
    path: "{{ mongo_db_path }}"
    state: directory
    owner: "{{ vitamui_defaults.users.vitamuidb | default('vitamuidb') }}"
    group: "{{ vitamui_defaults.users.group | default('vitamui') }}"
    mode: "{{ vitamui_defaults.folder.folder_permission | default('0750') }}"
  notify: "mongo - restart service"
  tags: update_mongodb_configuration

- name: Create the mongod configuration server file
  template:
    src: mongod.conf.j2
    dest: "{{ mongo_config_path }}/mongod.conf"
    owner: "{{ vitamui_defaults.users.vitamuidb | default('vitamuidb') }}"
    group: "{{ vitamui_defaults.users.group | default('vitamui') }}"
    mode: "{{ vitamui_defaults.folder.conf_permission | default('0440') }}"
  notify: "mongo - restart service"
  tags: update_mongodb_configuration

# TODO: Add logrotate

#### Consul configuration ####

- name: Ensure consul config dir is OK
  file:
    path: "{{ consul.conf_folder | default('/vitam/conf/consul') }}"
    owner: "{{ vitamui_defaults.users.vitamui | default('vitamui') }}"
    group: "{{ vitamui_defaults.users.group | default('vitamui') }}"
    mode: "{{ vitamui_defaults.folder.folder_permission | default('0750') }}"
    state: directory
  tags:
    - consul_conf
    - update_mongodb_configuration

- name: Deploy consul agent service declaration
  template:
    src: "service-componentid.json.j2"
    dest: "{{ consul.conf_folder | default('/vitam/conf/consul') }}/service-mongod.json"
    owner: "{{ vitamui_defaults.users.vitamui | default('vitamui') }}"
    group: "{{ vitamui_defaults.users.group | default('vitamui') }}"
    mode: "{{ vitamui_defaults.folder.conf_permission | default('0440') }}"
  tags:
    - consul_conf
    - update_mongodb_configuration
  notify: "mongo - reload consul configuration"

# Ensure that the installation is complete and consul up before contnuing...
- meta: flush_handlers
  tags:
    - consul_conf
    - update_mongodb_configuration

- name: Ensure vitamui-mongod is started
  service:
    name: vitamui-mongod
    state: started
    enabled: "{{ mongodb.at_boot | default(service_at_boot) }}"
  tags: update_mongodb_configuration

- name: Wait for the vitamui-mongod port to be open
  wait_for:
    host: "{{ ip_service }}"
    port: "{{ mongodb.mongod_port }}"
    timeout: "{{ vitamui_defaults.services.start_timeout }}"

- name: Check vitamui-mongod service health in local consul agent
  uri:
    url: "http://{{ (inventory_hostname in groups['hosts_vitamui_consul_server'] or inventory_hostname in groups['hosts_consul_server']) | ternary(hostvars[inventory_hostname]['ip_admin'], '127.0.0.1') }}:8500/v1/agent/health/service/name/mongo-vitamui-mongod"
  register: result
  until:
    - result.status is defined
    - result.status == 200
  retries: "{{ vitamui_defaults.services.status_retries_number | default(60) }}"
  delay: "{{ vitamui_defaults.services.status_retries_delay | default(5) }}"

#### Mongo online configuration ####
# Note : mongodb needs to be started for these elements to succeed

# Enable mongo passphrase

- name: Copy the passphrase
  template:
    src: keyfile.j2
    dest: "{{ mongo_config_path }}/keyfile"
    owner: "{{ vitamui_defaults.users.vitamuidb | default('vitamuidb') }}"
    group: "{{ vitamui_defaults.users.group | default('vitamui') }}"
    mode: 0600
  tags: update_mongodb_configuration

# # Now let's initiate the replica set
# # Do this only on the first node of the current shard
# # We have to wait for all the node to be up

- block:

    - fail:
        msg: "ERROR: mongo_rs_bootstrap node can't be mongo_arbiter !"
      when: mongo_arbiter | default(false) | bool == true
      tags: update_mongodb_configuration

    - name: Wait for the service port to be open on all members of the replica
      wait_for:
        host: "{{ hostvars[item]['ip_service'] }}"
        port: "{{ mongodb.mongod_port }}"
        timeout: "{{ vitamui_defaults.services.start_timeout }}"
      with_items: "{{ groups['hosts_vitamui_mongod'] }}"
      tags: update_mongodb_configuration

    - name: Copy the script which initiate the replica set
      template:
        src: init-replica.js.j2
        dest: "{{ vitamui_defaults.folder.root_path | default('/vitamui') }}/app/mongod/init-replica.js"
        owner: "{{ vitamui_defaults.users.vitamuidb | default('vitamuidb') }}"
        group: "{{ vitamui_defaults.users.group | default('vitamui') }}"
        mode: "{{ vitamui_defaults.folder.conf_permission | default('0440') }}"
      tags: update_mongodb_configuration

    - name: Initiate the replica set
      command: "mongosh --host {{ ip_service }} --port {{ mongodb.mongod_port }} --quiet --file {{ vitamui_defaults.folder.root_path | default('/vitamui') }}/app/mongod/init-replica.js"
      tags: update_mongodb_configuration

    - import_tasks: check_auth.yml

    # Create the local shard admin user
    - name: Compute list of mongo_nodes
      set_fact:
        mongo_nodes: "{{ mongo_nodes | default([]) + [ hostvars[item]['ip_service'] + ':' + mongodb.mongod_port | string ] }}"
      loop: "{{ groups['hosts_vitamui_mongod'] }}"
      when: hostvars[item]['mongo_arbiter'] | default(false) | bool == false

    - name: Copy the script which create the local users
      template:
        src: local-user.js.j2
        dest: "{{ vitamui_defaults.folder.root_path | default('/vitamui') }}/app/mongod/local-user.js"
        owner: "{{ vitamui_defaults.users.vitamuidb | default('vitamuidb') }}"
        group: "{{ vitamui_defaults.users.group | default('vitamui') }}"
        mode: "{{ vitamui_defaults.folder.conf_permission | default('0440') }}"
      tags: update_mongodb_configuration

    - name: Create the local shard user
      command: "mongosh --host {{ mongo_nodes | join(',') }} {{ mongo_credentials }} --quiet --file {{ vitamui_defaults.folder.root_path | default('/vitamui') }}/app/mongod/local-user.js"
      tags: update_mongodb_configuration

  when: mongo_rs_bootstrap | default(false) | bool == true
