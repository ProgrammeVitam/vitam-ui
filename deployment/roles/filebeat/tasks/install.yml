---

- name: Install Filebeat
  package:
    name: filebeat
    state: latest
  notify: "filebeat - restart service"

- name: Add Filebeat config file
  template:
    src: filebeat.yml.j2
    dest: /etc/filebeat/filebeat.yml
    mode: 0644
  notify: "filebeat - restart service"

- name: Create input.d folder
  file:
    path: /etc/filebeat/inputs.d
    state: directory
    mode: 0755
  notify: "filebeat - restart service"

## Copy inputs.d/
- name: Add Reverse filebeat inputs
  template:
    src: inputs/reverse.yml.j2
    dest: /etc/filebeat/inputs.d/reverse.yml
    mode: 0644
  when: inventory_hostname in groups['hosts_vitamui_reverseproxy']
  notify: "filebeat - restart service"

- set_fact:
      services_on_vm: "{{ group_names | regex_replace('_', '-') | regex_replace('hosts-', '') }}"

- debug:
    var: services_on_vm

- block:

  - set_fact:
      vitamui_service_list: "{{ vitamui.keys() | list }}"
      #| regex_replace('storageofferdefault', 'offer') | regex_replace('accessexternal', 'access-external') | regex_replace('accessinternal', 'access-internal') | regex_replace('batchreport', 'batch-report') | regex_replace('ingestexternal', 'ingest-external') | regex_replace('ingestinternal', 'ingest-internal') | regex_replace('log-servers', 'logstash') | regex_replace('_', '-') }}"

  - debug:
      var: vitamui_service_list

  - set_fact:
      vitamui_service_list: "{{ services_on_vm | intersect(vitamui_service_list) }}"

  - debug:
      var: vitamui_service_list

  - name: Add Vitam filebeat inputs
    template:
      src: inputs/vitamui_services.yml.j2
      dest: /etc/filebeat/inputs.d/vitamui-services.yml
      mode: 0644
    notify: "filebeat - restart service"

  when: inventory_hostname in groups['vitam']

- set_fact:
    cots_service_list: "{{ services_on_vm | intersect(cots_list) }}"

- name: Add COTS filebeat inputs
  template:
    src: inputs/cots.yml.j2
    dest: /etc/filebeat/inputs.d/cots.yml
    mode: 0644
  notify: "filebeat - restart service"

- meta: flush_handlers

- name: Ensure filebeat is started at boot
  service:
    name: filebeat
    enabled: "{{ filebeat.at_boot | default(service_at_boot) }}"
    state: started
