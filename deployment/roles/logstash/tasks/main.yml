---

- name: "Install {{ logstash_package }} package"
  package:
    name: "{{ logstash_package }}"
    state: present
  register: result
  retries: "{{ packages_install_retries_number }}"
  until: result is succeeded
  delay: "{{ packages_install_retries_delay }}"
  notify: "logstash - restart service"

## Logstash configuration

- name: Ensure logstash directories exist
  file:
    path: "{{ vitamui_defaults.folder.root_path }}/{{ item }}/logstash"
    owner: "{{ logstash_user }}"
    group: "{{ vitamui_defaults.users.group }}"
    state: directory
    mode: "{{ vitamui_defaults.folder.folder_permission }}"
  with_items:
    - data
    - log
    - conf
    - lib
    - tmp
  notify: "logstash - restart service"

- name: ensure json conf extra directory exists
  file:
    path: "{{ logstash_confextra_dir }}"
    owner: "{{ logstash_user }}"
    group: "{{ vitamui_defaults.users.group }}"
    state: directory
    mode: "{{ vitamui_defaults.folder.folder_permission }}"
  notify: "logstash - restart service"

- name: apply configuration files
  template:
    src: "{{ item }}.j2"
    dest: "/etc/logstash/{{ item }}"
    owner: "{{ logstash_user }}"
    group: "{{ vitamui_defaults.users.group }}"
    mode: "{{ vitamui_defaults.folder.conf_permission }}"
  with_items:
    - jvm.options
    - log4j2.properties
    - startup.options
    - logstash.yml
  notify: "logstash - restart service"

- block:

  - name: remove filebeat logstash configuration if it exists
    file:
      path: "{{ logstash_conf_dir }}/filebeat-to-logstash.conf"
      state: absent
    notify: "logstash - restart service"

  - name: configure logstash parser
    template:
      src: "{{ item }}.j2"
      dest: "{{ logstash_conf_dir }}/{{ item }}"
      owner: "{{ logstash_user }}"
      group: "{{ vitamui_defaults.users.group }}"
      mode: "{{ vitamui_defaults.folder.conf_permission }}"
    with_items:
      - 01-logstash-vitam-input.conf
      - 02-logstash-vitam-filter.conf
      - 03-logstash-vitam-output.conf
    notify: "logstash - restart service"

- name: add vitam patterns conf
  template:
    src: vitam-patterns.j2
    dest: "/usr/share/logstash/vendor/bundle/jruby/2.5.0/gems/logstash-patterns-core-{{ logstash_patterns_core_version }}/patterns/vitam"
    owner: "{{ logstash_user }}"
    group: "{{ vitamui_defaults.users.group }}"
  notify: "logstash - restart service"

  when: syslog.name | default('filebeat') != 'filebeat'

- block:

  - name: remove rsyslog logstash configuration if it exists
    file:
      path: "{{ logstash_conf_dir }}/{{ item }}"
      state: absent
    with_items:
      - 01-logstash-vitam-input.conf
      - 02-logstash-vitam-filter.conf
      - 03-logstash-vitam-output.conf
    notify: "logstash - restart service"

  - name: configure logstash parser when filebeat
    template:
      src: filebeat-to-logstash.conf.j2
      dest: "{{ logstash_conf_dir }}/filebeat-to-logstash.conf"
      owner: "{{ logstash_user }}"
      group: "{{ vitamui_defaults.users.group }}"
      mode: "{{ vitamui_defaults.folder.conf_permission }}"
    notify: "logstash - restart service"

  when: syslog.name | default('filebeat') == 'filebeat'

- name: configure extra parser configuration
  template:
    src: elasticsearch-template.json.j2
    dest: "{{ logstash_confextra_dir }}/elasticsearch-template.json"
    owner: "{{ logstash_user }}"
    group: "{{ vitamui_defaults.users.group }}"
    mode: "{{ vitam_defaults.folder.conf_permission }}"
  notify: "logstash - restart service"

#### Consul configuration ####

- name: Ensure consul config dir is OK
  file:
    path: "{{ consul.conf_folder | default('/vitam/conf/consul') }}"
    state: directory
    owner: "{{ vitam_defaults.users.vitam }}"
    group: "{{ vitam_defaults.users.group }}"
    mode: "{{ '0777' if install_mode == 'container' else vitam_defaults.folder.folder_permission }}"
  tags: consul_conf

- name: Deploy consul agent service declaration
  template:
    src: service-logstash.json.j2
    dest: "{{ consul.conf_folder | default('/vitam/conf/consul') }}/service-logstash.json"
    owner: "{{ vitam_defaults.users.vitam }}"
    group: "{{ vitam_defaults.users.group }}"
    mode: "{{ '0644' if install_mode == 'container' else vitam_defaults.folder.conf_permission }}"
  tags: consul_conf
  notify: "logstash - reload consul configuration"

- name: Flush handlers
  meta: flush_handlers

- name: Ensure logstash service is started at boot
  service:
    name: logstash
    enabled: "{{ logstash.at_boot | default(service_at_boot) }}"
    state: started

- name: Check logstash service health in local consul agent
  uri:
    url: "http://{{ (inventory_hostname in groups['hosts_vitamui_consul_server']) | ternary(hostvars[inventory_hostname]['ip_admin'], '127.0.0.1') }}:8500/v1/agent/health/service/name/vitamui-logstash"
  register: result
  until:
    - result.status is defined
    - result.status == 200
  retries: "{{ vitamui_defaults.services.status_retries_number | default(60) }}"
  delay: "{{ vitamui_defaults.services.status_retries_delay | default(5) }}"
