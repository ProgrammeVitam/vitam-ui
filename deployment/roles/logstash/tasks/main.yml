---

- name: Install java (prerequisite for other components) when RedHat
  yum:
    name: "{{ java_prerequisites.redhat }}"
    state: latest
  register: result
  retries: "{{ packages_install_retries_number }}"
  until: result is succeeded
  delay: "{{ packages_install_retries_delay }}"
  when: ansible_os_family == "RedHat"

- name: "install openjdk from {{ ansible_distribution_release }}-backports only when Debian"
  apt:
    name: "{{ java_prerequisites.debian }}"
    state: latest
    default_release: "{{ ansible_distribution_release }}-backports"
  register: result
  retries: "{{ packages_install_retries_number }}"
  until: result is succeeded
  delay: "{{ packages_install_retries_delay }}"
  when:
    - ansible_os_family == "Debian"
    - disable_internet_repositories_install | default(false) | bool == false

- name: "install openjdk only when Debian"
  apt:
    name: "{{ java_prerequisites.debian }}"
    state: latest
  register: result
  retries: "{{ packages_install_retries_number }}"
  until: result is succeeded
  delay: "{{ packages_install_retries_delay }}"
  when:
    - ansible_os_family == "Debian"
    - disable_internet_repositories_install | default(false) | bool == true

- name: "Install {{ package_name }} package"
  package:
    name: "{{ package_name }}"
    state: latest
  register: result
  retries: "{{ packages_install_retries_number | default(2) }}"
  until: result is succeeded
  delay: "{{ packages_install_retries_delay | default(10) }}"
  notify: restart logstash
  when: force_vitamui_version is not defined

# Force a specific version to install (even downgrade)
- block:

  - name: "Install {{ package_name }} package"
    apt:
      name: "{{ package_name }}={{ force_vitamui_version }}"
      force: yes
      state: present
    register: result
    retries: "{{ packages_install_retries_number | default(2) }}"
    until: result is succeeded
    delay: "{{ packages_install_retries_delay | default(10) }}"
    notify: restart logstash
    when: ansible_os_family == "Debian"

  - name: "Install {{ package_name }} package"
    yum:
      name: "{{ package_name }}-{{ force_vitamui_version }}"
      allow_downgrade : yes
      state: present
    register: result
    retries: "{{ packages_install_retries_number | default(2) }}"
    until: result is succeeded
    delay: "{{ packages_install_retries_delay | default(10) }}"
    notify: restart logstash
    when: ansible_os_family == "RedHat"

  when: force_vitamui_version is defined

## Logstash configuration

- name: Ensure logstash directories exist
  file:
    path: "{{ vitamui_defaults.folder.root_path | default('/vitamui') }}/{{ item }}/logstash"
    owner: "{{ vitamui_defaults.users.vitamuidb | default('vitamuidb') }}"
    group: "{{ vitamui_defaults.users.group | default('vitamui') }}"
    state: directory
    mode: "{{ vitamui_defaults.folder.folder_permission | default('0750') }}"
  with_items:
    - data
    - log
    - conf
    - lib
    - tmp
  notify:
    - restart logstash

- name: ensure json conf extra directory exists
  file:
    path: "{{ logstash_confextra_dir }}"
    owner: "{{ vitamui_defaults.users.vitamuidb | default('vitamuidb') }}"
    group: "{{ vitamui_defaults.users.group | default('vitamui') }}"
    state: directory
    mode: "{{ vitamui_defaults.folder.folder_permission | default('0750') }}"
  notify:
    - restart logstash

- name: apply configuration files
  template:
    src: "{{ item }}.j2"
    dest: "/{{ vitamui_defaults.folder.root_path | default('/vitamui')}}/conf/logstash/{{ item }}"
    owner: "{{ vitamui_defaults.users.vitamuidb | default('vitamuidb') }}"
    mode: "{{ vitamui_defaults.folder.conf_permission | default('0440') }}"
  with_items:
    - "jvm.options"
    - "log4j2.properties"
    # - "startup.options"
    - "logstash.yml"
  notify:
    - restart logstash

- name: Ensure conf.d subdir exists
  file:
    path: "{{ logstash_conf_dir }}/conf.d/"
    owner: "{{ vitamui_defaults.users.vitamuidb | default('vitamuidb') }}"
    group: "{{ vitamui_defaults.users.group | default('vitamui') }}"
    state: directory
    mode: "{{ vitamui_defaults.folder.folder_permission | default('0750') }}"

- name: configure logstash parser
  template:
    src: "conf.d/{{ item }}.j2"
    dest: "{{ logstash_conf_dir }}/conf.d/{{ item }}"
    owner: "{{ vitamui_defaults.users.vitamuidb | default('vitamuidb') }}"
    group: "{{ vitamui_defaults.users.group | default('vitamui') }}"
    mode: "{{ vitamui_defaults.folder.conf_permission | default('0440') }}"
  with_items:
    - "01-logstash-vitam-filter.conf"
    - "02-logstash-vitam-filter.conf"
    - "03-logstash-vitam-filter.conf"
  notify:
    - restart logstash

- name: Ensure conf.d subdir exists
  file:
    path: "{{ logstash_conf_dir }}/conf.d/extra"
    owner: "{{ vitamui_defaults.users.vitamuidb | default('vitamuidb') }}"
    group: "{{ vitamui_defaults.users.group | default('vitamui') }}"
    state: directory
    mode: "{{ vitamui_defaults.folder.folder_permission | default('0750') }}"

- name: configure extra parser configuration
  template:
    src: "conf.d/extra/{{ item }}.j2"
    dest: "{{ logstash_conf_dir }}/conf.d/extra/{{ item }}"
    owner: "{{ vitamui_defaults.users.vitamuidb | default('vitamuidb') }}"
    group: "{{ vitamui_defaults.users.group | default('vitamui') }}"
    mode: "{{ vitam_defaults.folder.conf_permission }}"
  with_items:
    - "elasticsearch-template.json"
  notify:
    - restart logstash

#### Consul configuration ####

- name: Ensure consul config dir is OK
  file:
    path: "{{ consul.conf_folder | default('/vitam/conf/consul') }}"
    state: directory
    owner: "{{ vitam_defaults.users.vitam }}"
    group: "{{ vitam_defaults.users.group }}"
  tags: consul_conf

- name: Deploy consul agent service declaration
  template:
    src: "service-logstash.json.j2"
    dest: "{{ consul.conf_folder | default('/vitam/conf/consul') }}/service-logstash.json"
    owner: "{{ vitam_defaults.users.vitam }}"
    group: "{{ vitam_defaults.users.group }}"
    mode: "{{ vitam_defaults.folder.conf_permission }}"
  tags: consul_conf
  notify: reload consul configuration for logstash

- meta: flush_handlers
  tags: consul_conf

- name: Ensure logstash service is started
  service:
    name: "{{ logstash.service_name | default('vitamui-logstash') }}"
    state: started
    enabled: "{{ logstash.at_boot | default(service_at_boot) }}"

- name: Wait for logstash to be available
  wait_for:
    sleep: 1
    connect_timeout: 1
    port: "{{ logstash.port }}"
    delay: 5
    timeout: 240
    host: "{{ ip_admin }}"
  tags: start

