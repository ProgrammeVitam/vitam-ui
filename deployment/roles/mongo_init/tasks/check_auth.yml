---

- name: Check if authent is enabled
  command: "mongo --host mongodb://{{ mongod_uri }}/admin?replicaSet={{ mongod_replicaset_name }} -u {{ mongodb.admin.user }} -p {{ mongodb.admin.password }} --quiet --eval 'db.help()'"
  register: mongo_authent_enabled
  failed_when: false
  no_log: "{{ hide_passwords_during_deploy }}"
  when: mongodb.docker is not defined or not mongodb.docker.enable

- name: Load script in database (docker)
  shell: "docker exec --tty {{ mongodb.docker.image_name }} /bin/bash -c \"mongo --host mongodb://{{ mongod_uri }}/admin?replicaSet={{ mongod_replicaset_name }} -u {{ mongodb.admin.user }} -p {{ mongodb.admin.password }} --quiet --eval 'db.help()'\""
  no_log: "{{ hide_passwords_during_deploy }}"
  failed_when: false
  register: mongo_authent_enabled
  when: mongodb.docker is defined and mongodb.docker.enable

# Set mongo_no_auth facts
- name: Set default mongo facts
  set_fact:
    mongo_credentials: ""
    mongo_no_auth: false

- name: Set mongo_no_auth fact to true
  set_fact:
    mongo_no_auth: true
  when: "mongo_authent_enabled.rc != 0"

# When authentication is required, we set mongodb admin credentials
- name: Set mongodb authentication credentials
  set_fact:
    mongo_credentials: " -u {{ mongodb.admin.user }} -p {{ mongodb.admin.password }} --authenticationDatabase {{ mongodb.admin.db }} "
  when: "mongo_authent_enabled.rc == 0"
  no_log: "{{ hide_passwords_during_deploy }}"

