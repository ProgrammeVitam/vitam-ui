---

- fail: msg="Variable '{{ mongo_file }}' is not defined"
  when: mongo_file is undefined

- name: 
  debug:
    msg: ">>>> Execution of the file {{ mongo_file.finalname }}<<<<"

- name: Check if the script exists
  stat:
    path: "{{ mongod_output_dir_entry_point }}/{{ mongo_file.finalname }}"
  register: stat_result

- block:
    - fail: msg="The file '{{ mongo_file.finalname }}' is not exist"
      when: not stat_result.stat.exists

    - name: Get script content.
      shell: "cat {{ mongod_output_dir_entry_point }}/{{ mongo_file.finalname }}"
      register: script_content
    
    - name: Compute versionned script files
      template:
        src: "versioned_script.js.j2"
        dest: "{{ mongod_output_dir_entry_point }}/{{ mongo_file.finalname }}"
        owner: "{{ vitamui_defaults.users.vitamuidb }}"
        group: "{{ vitamui_defaults.users.group }}"
        mode: 0755        

  when: mongodb.versioning is defined and mongodb.versioning.enable
     
- name: Load script in database
  shell: "mongo \"mongodb://{{ mongod_uri }}/admin\" {{ mongo_credentials }} {{ mongod_output_dir_entry_point }}/{{ mongo_file.finalname }}"
  no_log: "{{ hide_passwords_during_deploy }}"
  when: mongodb.docker is not defined or not mongodb.docker.enable

- name: Load script in database (docker)
  command: "docker exec --tty {{ mongodb.docker.image_name }} /bin/bash -c \"mongo \\\"mongodb://{{ mongod_uri }}/admin\\\" {{ mongo_credentials }} {{ mongodb.docker.internal_dir}}/app/mongod/{{ mongo_file.finalname }}\""
  no_log: "{{ hide_passwords_during_deploy }}"
  when: mongodb.docker is defined and mongodb.docker.enable
