<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema"
           xmlns:structure="http://relaxng.org/ns/structure/1.0"
           elementFormDefault="qualified"
           targetNamespace="http://relaxng.org/ns/structure/1.0"
>

    <!-- Grammar -->
    <xs:element name="grammar">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="structure:start"/>
                <xs:element maxOccurs="unbounded" ref="structure:define"/>
            </xs:sequence>
            <xs:attribute name="datatypeLibrary" use="required"
                          type="xs:anyURI"/>
            <xs:attribute name="ns" use="required" type="xs:anyURI"/>
        </xs:complexType>
    </xs:element>

    <xs:element name="define">
        <xs:complexType>
            <xs:sequence>
                <xs:choice minOccurs="0">
                    <!--<xs:element name="choice" ref="structure:choice"/> -->
                    <xs:element ref="structure:interleave"/>
                </xs:choice>
                <xs:element minOccurs="0" maxOccurs="unbounded"
                            name="optional" type="structure:optional"/>
                <xs:choice minOccurs="0">
                    <xs:element name="children" type="structure:element"/>
                    <xs:element ref="structure:zeroOrMore"/>
                </xs:choice>
            </xs:sequence>
            <xs:attribute name="name" use="required"
                          type="xs:NCName"/>
        </xs:complexType>
    </xs:element>


    <xs:element name="interleave">
        <xs:complexType>
            <xs:sequence>
                <xs:element maxOccurs="unbounded" ref="structure:ref"/>
                <xs:choice minOccurs="0">
                    <xs:element name="optional" type="structure:optional"/>
                    <xs:element ref="structure:zeroOrMore"/>
                    <xs:element name="oneOrMore" type="structure:oneOrMore"/>
                    <xs:element ref="structure:group"/>
                </xs:choice>
            </xs:sequence>
        </xs:complexType>
    </xs:element>

    <!-- Defines the start element -->
    <xs:element name="start">
        <xs:complexType>
            <xs:sequence>
                <xs:element name="element" minOccurs="1"
                            type="structure:element"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>

    <!-- Element defintion -->
    <xs:complexType name="element">
        <xs:sequence>
            <xs:element minOccurs="0" name="anyName"
                        type="structure:anyName"/>
            <xs:element minOccurs="0" name="nsName"
                        type="structure:nsName"/>
            <xs:element minOccurs="0" name="except"
                        type="structure:except"/>
            <xs:element minOccurs="0" name="attribute"
                        type="structure:attribute"/>
            <xs:element minOccurs="0" ref="structure:choice"/>
            <xs:element minOccurs="0" name="data"
                        type="structure:data"/>
            <xs:element minOccurs="0" name="oneOrMore"
                        type="structure:oneOrMore"/>
            <xs:element minOccurs="0" ref="structure:zeroOrMore"/>
            <xs:element minOccurs="0" name="optional"
                        type="structure:optional"/>
            <xs:element ref="structure:text"/>
            <xs:element minOccurs="0" maxOccurs="unbounded"
                        name="element" type="structure:element"/>
        </xs:sequence>
        <xs:attribute name="name" type="xs:NCName"/>
    </xs:complexType>

    <!-- Defines the define element -->


    <!-- Defines an utilitary ref element to refer to other elements -->
    <xs:element name="ref">
        <xs:complexType>
            <xs:attribute name="name" use="required"
                          type="xs:NCName"/>
        </xs:complexType>
    </xs:element>

    <!-- Choice -->
    <xs:element name="choice">
        <xs:complexType>
            <xs:choice>
                <xs:choice maxOccurs="unbounded">
                    <xs:element name="attribute" type="structure:attribute"/>
                    <xs:element name="element" type="structure:element"/>
                    <xs:element ref="structure:ref"/>
                    <xs:element ref="structure:text"/>
                </xs:choice>
                <xs:element maxOccurs="unbounded" ref="structure:value"/>
            </xs:choice>
        </xs:complexType>
    </xs:element>

    <xs:element name="value" type="xs:NCName"/>


    <!-- Group -->
    <xs:element name="group">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="structure:element"/>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <!-- One or More -->
    <xs:complexType name="oneOrMore">
        <xs:complexContent>
            <xs:extension base="structure:element"/>
        </xs:complexContent>
    </xs:complexType>

    <!-- Zero or More -->
    <xs:element name="zeroOrMore">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="structure:element"/>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <!-- Optional -->
    <xs:complexType name="optional">
        <xs:complexContent>
            <xs:extension base="structure:element"/>
        </xs:complexContent>
    </xs:complexType>


    <!-- Attribute -->
    <xs:complexType name="attribute">
        <xs:complexContent>
            <xs:extension base="structure:element">
                <xs:choice minOccurs="0">
                    <xs:element name="anyName" type="structure:anyName"/>
                    <xs:element name="data" type="structure:data"/>
                </xs:choice>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>


    <!-- Text -->
    <xs:element name="text">
        <xs:complexType/>
    </xs:element>

    <!-- AnyName -->
    <xs:complexType name="anyName">
        <xs:complexContent>
            <xs:extension base="structure:element">
                <xs:sequence>
                    <xs:element minOccurs="0" name="except"
                                type="structure:except"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- Except -->
    <xs:complexType name="except">
        <xs:complexContent>
            <xs:extension base="structure:element">
                <xs:sequence>
                    <xs:element minOccurs="0" name="nsName"
                                type="structure:nsName"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- nsName -->
    <xs:complexType name="nsName">
        <xs:complexContent>
            <xs:extension base="structure:element">
                <xs:attribute name="ns"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>


    <!-- Data -->
    <xs:complexType name="data">
        <xs:complexContent>
            <xs:extension base="structure:element">
                <xs:attribute name="type" use="required" type="xs:NCName"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

</xs:schema>
