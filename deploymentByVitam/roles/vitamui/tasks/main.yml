---

- name: "Install {{ vitamui_struct.package_name }} package"
  package:
    name: "{{ vitamui_struct.package_name }}"
    state: latest
  register: result
  retries: "{{ packages_install_retries_number }}"
  until: result is succeeded
  delay: "{{ packages_install_retries_delay }}"
  tags:
    - update_package_vitamui
  notify:
    - restart service
  when: force_vitamui_version is not defined

- name: Ensure {{ service_name }} service is enabled at boot
  service:
    name: "{{ service_name }}"
    enabled: true
  notify:
    - restart service

#### Configuration ####

- name: Check that the directories exist (must be removed when the RPM plugin will be patched)
  file:
    path: "{{ vitamui_defaults.folder.root_path }}/{{ item }}/{{ vitamui_struct.vitamui_component }}"
    state: directory
    owner: "{{ vitamui_defaults.users.vitamui }}"
    group: "{{ vitamui_defaults.users.group }}"
    mode: "{{ vitamui_defaults.folder.folder_permission }}"
  with_items:
    - app
    - bin
    - conf
    - data
    - lib
    - log
    - script
    - tmp
  notify:
    - restart service

- name: Ensure that the sysconfig sub-directory exists
  file:
    path: "{{ vitamui_folder_conf }}/sysconfig"
    state: directory
    owner: "{{ vitamui_defaults.users.vitamui }}"
    group: "{{ vitamui_defaults.users.group }}"
    mode: "{{ vitamui_defaults.folder.folder_permission }}"
  notify:
    - restart service

- name: Ensure that the templates sub-directory exists
  file:
    path: "{{ vitamui_folder_conf }}/templates"
    state: directory
    owner: "{{ vitamui_defaults.users.vitamui }}"
    group: "{{ vitamui_defaults.users.group }}"
    mode: "{{ vitamui_defaults.folder.folder_permission }}"
  notify:
    - restart service

- name: Deploy common configuration files in sysconfig subdir
  template:
    src: "{{ item }}.j2"
    dest: "{{ vitamui_folder_conf }}/sysconfig/{{ item }}"
    owner: "{{ vitamui_defaults.users.vitamui }}"
    group: "{{ vitamui_defaults.users.group }}"
    mode: "{{ vitamui_defaults.folder.conf_permission }}"
  with_items:
    - "java_opts"
  tags:
    - update_jvmoptions_vitamui
  notify:
    - restart service

- name: Deploy common configuration files
  template:
    src: "{{ item }}.j2"
    dest: "{{ vitamui_folder_conf }}/{{ item }}"
    owner: "{{ vitamui_defaults.users.vitamui }}"
    group: "{{ vitamui_defaults.users.group }}"
    mode: "{{ vitamui_defaults.folder.conf_permission }}"
  with_items:
    - "logback.xml"

- name: Deploy specific configuration files
  template:
    src: "{{ item }}"
    dest: "{{ vitamui_folder_conf }}/{{ item | basename | regex_replace('\\.j2$') }}"
    owner: "{{ vitamui_defaults.users.vitamui }}"
    group: "{{ vitamui_defaults.users.group }}"
    mode: "{{ vitamui_defaults.folder.conf_permission }}"
  with_fileglob:
    - "{{ role_path }}/templates/{{ vitamui_struct.vitamui_component }}/*"
  no_log: "{{ hide_passwords_during_deploy }}"
  tags:
    - update_vitam_configuration
  notify:
    - restart service

- name: Deploy customer-init.yml on iam-* components
  copy:
    src: "customer-init.yml"
    dest: "{{ vitamui_folder_conf }}/customer-init.yml"
    owner: "{{ vitamui_defaults.users.vitamui }}"
    group: "{{ vitamui_defaults.users.group }}"
    mode: "{{ vitamui_defaults.folder.conf_permission }}"
  when: vitamui_struct.vitamui_component in ["iam-external","iam-internal"]
  tags:
    - update_vitam_configuration
  notify:
    - restart service

- name: "Copy {{ vitamui_struct.package_name }} jks keystore (server)"
  copy:
    src: "{{ inventory_dir }}/keystores/server/{{ inventory_hostname }}/keystore_{{ vitamui_struct.store_name }}.jks"
    dest: "{{ vitamui_folder_conf }}/keystore_{{ vitamui_struct.package_name }}.jks"
    owner: "{{ vitamui_defaults.users.vitamui }}"
    group: "{{ vitamui_defaults.users.group }}"
    mode: "{{ vitamui_defaults.folder.folder_permission }}"
  when: "( vitamui_struct.secure|lower == 'true' ) and ({{ lookup('pipe', 'test -f {{ inventory_dir }}/keystores/server/{{ inventory_hostname }}/keystore_{{ vitamui_struct.store_name }}.jks || echo nofile') == \"\" }})"
  tags:
    - update_vitamui_certificates
  notify:
    - restart service

- name: "Copy other key stores"
  copy:
    src: "{{ inventory_dir }}/keystores/server/{{ groups[('hosts_vitamui',item)|join('_')]|first }}/keystore_{{ vitamui[item].store_name }}.jks"
    dest: "{{ vitamui_folder_conf }}/keystore_{{ vitamui[item].package_name }}.jks"
    owner: "{{ vitamui_defaults.users.vitamui }}"
    group: "{{ vitamui_defaults.users.group }}"
    mode: "{{ vitamui_defaults.folder.folder_permission }}"
  when: "( vitamui[item].secure|lower == 'true' ) and ({{ lookup('pipe', 'test -f {{ inventory_dir }}/keystores/server/{{ groups[((\"hosts_vitamui\",item)|join(\"_\"))]|first }}/keystore_{{ vitamui[item].store_name }}.jks || echo nofile') == \"\" }})"
  with_items: "{{ other_stores }}" # Exemple : ["security_internal","iam_internal"]
  tags:
    - update_vitamui_certificates
  notify:
    - restart service

- name: "Copy server truststore"
  copy:
    src: "{{ inventory_dir }}/keystores/server/truststore_server.jks"
    dest: "{{ vitamui_folder_conf }}/truststore_{{ vitamui_struct.package_name }}.jks"
    owner: "{{ vitamui_defaults.users.vitamui }}"
    group: "{{ vitamui_defaults.users.group }}"
    mode: "{{ vitamui_defaults.folder.folder_permission }}"
  when: "( vitamui_struct.secure|lower == 'true' ) and ( {{ lookup('pipe', 'test -f {{ inventory_dir }}/keystores/server/truststore_server.jks || echo nofile') == \"\"}} )"
  tags:
    - update_vitamui_certificates
  notify:
    - restart service

- name: "Copy {{ vitamui_certificate_client_type }} truststore"
  copy:
    src: "{{ inventory_dir }}/keystores/client-{{ vitamui_certificate_client_type }}/truststore_{{ vitamui_certificate_client_type }}.jks"
    dest: "{{ vitamui_folder_conf }}/truststore_{{ vitamui_certificate_client_type }}.jks"
    owner: "{{ vitamui_defaults.users.vitamui }}"
    group: "{{ vitamui_defaults.users.group }}"
    mode: "{{ vitamui_defaults.folder.folder_permission }}"
  when: "( vitamui_struct.secure|lower == 'true' ) and ( vitamui_certificate_client_type is defined ) and ( {{ lookup('pipe', 'test -f {{ inventory_dir }}/keystores/client-{{ vitamui_certificate_client_type }}/truststore_{{ vitamui_certificate_client_type }}.jks || echo nofile') == \"\"}} )"
  tags:
    - update_vitamui_certificates
  notify:
    - restart service

# - name: "Copy server grantedstore"
#   copy:
#     src: "{{ inventory_dir }}/keystores/client-{{ vitamui_certificate_client_type }}/grantedstore_{{ vitamui_certificate_client_type }}.jks"
#     dest: "{{ vitamui_folder_conf }}/grantedstore_{{ vitamui_struct.package_name }}.jks"
#     owner: "{{ vitamui_defaults.users.vitamui }}"
#     group: "{{ vitamui_defaults.users.group }}"
#     mode: "{{ vitamui_defaults.folder.folder_permission }}"
#   when: "( vitamui_struct.secure|lower == 'true' ) and ( vitamui_certificate_client_type is defined ) and ( {{ lookup('pipe', 'test -f {{ inventory_dir }}/keystores/server/{{ inventory_hostname }}/keystore_{{ vitamui_struct.vitamui_component }}.jks || echo nofile') == \"\"}} ) and ( {{ lookup('pipe', 'test -f {{ inventory_dir }}/keystores/client-{{ vitamui_certificate_client_type }}/grantedstore_{{ vitamui_certificate_client_type }}.jks || echo nofile') == \"\"}} )"
#   tags:
#     - update_vitamui_certificates
#   notify:
#     - restart service

- name: "Copy {{ vitamui_struct.package_name }} p12 keystore (clients)"
  copy:
    src: "{{ inventory_dir }}/keystores/client-{{ vitamui_certificate_client_type }}/keystore_{{ vitamui_struct.package_name }}.p12"
    dest: "{{ vitamui_folder_conf }}/keystore_{{ vitamui_struct.package_name }}.p12"
    owner: "{{ vitamui_defaults.users.vitamui }}"
    group: "{{ vitamui_defaults.users.group }}"
    mode: "{{ vitamui_defaults.folder.folder_permission }}"
  when: "( vitamui_struct.secure|lower == 'true' ) and ( vitamui_certificate_client_type is defined ) and ( {{ lookup('pipe', 'test -f {{ inventory_dir }}/keystores/client-{{ vitamui_certificate_client_type }}/keystore_{{ vitamui_struct.package_name }}.p12 || echo nofile') == \"\" }} )"
  tags:
    - update_vitamui_certificates
  notify:
    - restart service

- name: "Copy vitam certificates when iam-internal component"
  copy:
    src: "{{ item }}"
    dest: "{{ vitamui_folder_conf }}/{{ item | basename }}"
    owner: "{{ vitamui_defaults.users.vitamui }}"
    group: "{{ vitamui_defaults.users.group }}"
    mode: "{{ vitamui_defaults.folder.folder_permission }}"
  with_fileglob:
    - "{{ inventory_dir }}/certs_vitam/*.*"
  when: vitamui_struct.vitamui_component|lower == 'iam-internal'
  tags:
    - update_vitamui_certificates
  notify:
    - restart service

- name: apply consul conf when cas-server ONLY
  template:
    src: "cas-server/vitamui-cas-server.json.j2"
    dest: "{{ vitamui_conf_consul }}/vitamui-cas-server.json"
    owner: "{{ vitamui_defaults.users.vitamui }}"
    group: "{{ vitamui_defaults.users.group }}"
    mode: "{{ vitamui_defaults.folder.folder_permission }}"
  when: vitamui_struct.service_name == 'vitamui-cas-server'
  notify:
    - restart service

- name: flush_handlers
  meta: flush_handlers

- name: "Ensure {{ service_name }} service is started"
  service:
    name: "{{ service_name }}"
    state: started

# - name: "Check whether {{ vitamui_struct.package_name }} is listening on service port {{ port_test }}"
#   wait_for:
#     host: "{{ ip_service }}"
#     port: "{{ port_test }}"
#     state: started
