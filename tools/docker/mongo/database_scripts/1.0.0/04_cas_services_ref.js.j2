db = db.getSiblingDB('{{ mongodb.cas.db }}')

print("START cas_services_ref.js");

// Added a Z in the Name to ensure the regex is used last because CAS order them by 'Name' field
db.services.insert({
	"_id": NumberInt(1),
	"_class": "org.apereo.cas.services.RegexRegisteredService",
	"serviceId": "^{{ vitamui.portal.base_url|default(url_prefix) }}/.*",
	"name": "Z Portal Application",
	"logoutType" : "FRONT_CHANNEL",
	"logoutUrl": "{{ vitamui.portal.base_url|default(url_prefix) }}/logout",
	"attributeReleasePolicy": {
  		"_class": "org.apereo.cas.services.ReturnAllAttributeReleasePolicy"
	}
});

db.services.insert({
	"_id" : NumberInt(2),
	"_class": "org.apereo.cas.services.RegexRegisteredService",
{% if vitamui.identity.base_url is defined %}
	"serviceId": "^{{ vitamui.identity.base_url }}/.*",
{% else %}
	"serviceId": "^{{ url_prefix }}/identity/.*",
{% endif %}
	"name": "Identity Access Management Application",
	"logoutType" : "FRONT_CHANNEL",
{% if vitamui.identity.base_url is defined %}
	"logoutUrl": "{{ vitamui.identity.base_url }}/logout",
{% else %}
	"logoutUrl": "{{ url_prefix }}/identity/logout",
{% endif %}
	"attributeReleasePolicy": {
  		"_class": "org.apereo.cas.services.ReturnAllAttributeReleasePolicy"
	}
});

db.services.insert({
	"_id" : NumberInt(3),
	"_class": "org.apereo.cas.services.RegexRegisteredService",
{% if vitamui.identity_admin.base_url is defined %}
	"serviceId": "^{{ vitamui.identity_admin.base_url }}/.*",
{% else %}
	"serviceId": "^{{ url_prefix }}/identity-admin/.*",
{% endif %}
	"name": "Identity Admin Access Management Application",
	"logoutType" : "FRONT_CHANNEL",
{% if vitamui.identity_admin.base_url is defined %}
	"logoutUrl": "{{ vitamui.identity_admin.base_url }}/logout",
{% else %}
	"logoutUrl": "{{ url_prefix }}/identity-admin/logout",
{% endif %}
	"attributeReleasePolicy": {
  		"_class": "org.apereo.cas.services.ReturnAllAttributeReleasePolicy"
	}
});

print("END cas_services_ref.js");
