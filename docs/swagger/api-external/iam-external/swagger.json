{
  "swagger": "2.0",
  "info": {
    "description": "Ces APIS sont utilisés pour configurer les clients, tenants, idp, groupes, profils, et utilisateurs.",
    "version": "v1",
    "title": "API IAM - Gestion des accès aux identités",
    "termsOfService": "Terms of service",
    "contact": {
      "name": "Direction de la diffusion et des partenariats",
      "email": "contact@programmevitam.fr"
    },
    "license": {
      "name": "License to be defined ...",
      "url": "http://notedefined.com"
    }
  },
  "host": "localhost",
  "basePath": "/iam/v1",
  "tags": [
    {
      "name": "Utilisateurs",
      "description": "Ensemble des APIs permettant la gestion des utilisateurs (création, modification, récupération et vérification de l'existence)"
    },
    {
      "name": "Applications",
      "description": "Ensemble des APIs permettant la gestion des applications (récupération et vérification de l'existance)"
    },
    {
      "name": "Cas",
      "description": "Ensemble des APIs permettant la gestion de l'authentification, la subrogation et de la déconnexion. Ces APIs sont utilisées seulement par le serveur CAS"
    },
    {
      "name": "Clients",
      "description": "Ensemble des APIs permettant la gestion des clients (création, modification, récupération et vérification de l'existence)"
    },
    {
      "name": "Groupes",
      "description": "Ensemble des APIs permettant la gestion des groupes (création, modification, récupération et vérification de l'existence)"
    },
    {
      "name": "Fournisseur d'identités",
      "description": "Ensemble des APIs permettant la gestion des fournisseurs d'identités (création, modification, récupération et vérification de l'existence)"
    },
    {
      "name": "Propriétaires",
      "description": "Ensemble des APIs permettant la gestion des propriétaires (création, modification, récupération et vérification de l'existence)"
    },
    {
      "name": "Profils",
      "description": "Ensemble des APIs permettant la gestion des profils (création, modification, récupération et vérification de l'existence)"
    },
    {
      "name": "Statut",
      "description": "Ensemble des APIs permettant de vérifier l'état du service"
    },
    {
      "name": "Subrogations",
      "description": "Ensemble des APIs permettant la gestion de la subrogation (création, modification, récupération et vérification de l'existence)"
    },
    {
      "name": "Tenants",
      "description": "Ensemble des APIs permettant la gestion des tenants (création, modification, récupération et vérification de l'existence)"
    }
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/autotest": {
      "get": {
        "tags": [
          "Statut"
        ],
        "summary": "Test de l'API",
        "operationId": "autotestUsingGET",
        "parameters": [
          {
            "$ref": "#/parameters/x-tenant-id"
          },
          {
            "$ref": "#/parameters/x-user-token"
          },
          {
            "$ref": "#/parameters/x-application-id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "401": {
            "$ref": "#/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/responses/Forbidden"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          }
        }
      }
    },
    "/status": {
      "get": {
        "tags": [
          "Statut"
        ],
        "summary": "Récupération du statut de l'API",
        "operationId": "statusUsingGET",
        "parameters": [
          {
            "$ref": "#/parameters/x-tenant-id"
          },
          {
            "$ref": "#/parameters/x-user-token"
          },
          {
            "$ref": "#/parameters/x-application-id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string",
              "example": "OK"
            }
          },
          "401": {
            "$ref": "#/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/responses/Forbidden"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          }
        }
      }
    },
    "/applications": {
      "get": {
        "tags": [
          "Applications"
        ],
        "summary": "Récupération des Applications",
        "operationId": "getAllUsingGET_2",
        "parameters": [
          {
            "$ref": "#/parameters/x-tenant-id"
          },
          {
            "$ref": "#/parameters/x-user-token"
          },
          {
            "$ref": "#/parameters/x-application-id"
          },
          {
            "$ref": "#/parameters/criteria"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ApplicationDto"
              }
            }
          },
          "401": {
            "$ref": "#/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          }
        }
      }
    },
    "/cas/login": {
      "post": {
        "tags": [
          "Cas"
        ],
        "summary": "Authentification",
        "operationId": "loginUsingPOST",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/x-tenant-id"
          },
          {
            "$ref": "#/parameters/x-user-token"
          },
          {
            "$ref": "#/parameters/x-application-id"
          },
          {
            "in": "body",
            "name": "LoginRequestDto",
            "description": "Informations de connexion",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LoginRequestDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UserDto"
            }
          },
          "401": {
            "$ref": "#/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/responses/Forbidden"
          }
        }
      }
    },
    "/cas/logout": {
      "get": {
        "tags": [
          "Cas"
        ],
        "summary": "Déconnexion",
        "operationId": "logoutUsingGET",
        "parameters": [
          {
            "$ref": "#/parameters/x-tenant-id"
          },
          {
            "$ref": "#/parameters/x-user-token"
          },
          {
            "$ref": "#/parameters/x-application-id"
          },
          {
            "name": "authToken",
            "in": "query",
            "description": "Identifiant technique du token a invalider",
            "required": true,
            "type": "string"
          },
          {
            "name": "superUser",
            "in": "query",
            "description": "Email de l'utilisateur subrogateur",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "$ref": "#/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/responses/Forbidden"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          }
        }
      }
    },
    "/cas/password/change": {
      "post": {
        "tags": [
          "Cas"
        ],
        "summary": "Modification du mot de passe",
        "operationId": "changePasswordUsingPOST",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/x-tenant-id"
          },
          {
            "$ref": "#/parameters/x-user-token"
          },
          {
            "$ref": "#/parameters/x-application-id"
          },
          {
            "name": "username",
            "in": "header",
            "description": "Email de l'utilisateur",
            "required": true,
            "type": "string"
          },
          {
            "name": "password",
            "in": "header",
            "description": "Nouveau mot de passe",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string",
              "example": "true"
            }
          },
          "401": {
            "$ref": "#/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/responses/Forbidden"
          }
        }
      }
    },
    "/cas/subrogations": {
      "get": {
        "tags": [
          "Cas"
        ],
        "summary": "Récupération d'une subrogation à partir de l'email du subrogateur",
        "operationId": "getSubrogationsBySuperUserEmailUsingGET",
        "parameters": [
          {
            "$ref": "#/parameters/x-tenant-id"
          },
          {
            "$ref": "#/parameters/x-user-token"
          },
          {
            "$ref": "#/parameters/x-application-id"
          },
          {
            "name": "superUserEmail",
            "in": "query",
            "description": "Email du subrogateur",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SubrogationDto"
              }
            }
          },
          "401": {
            "$ref": "#/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/responses/Forbidden"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          }
        }
      }
    },
    "/cas/users": {
      "get": {
        "tags": [
          "Cas"
        ],
        "summary": "Récupération d'un utilisateur",
        "operationId": "getUserByIdUsingGET",
        "parameters": [
          {
            "$ref": "#/parameters/x-tenant-id"
          },
          {
            "$ref": "#/parameters/x-user-token"
          },
          {
            "$ref": "#/parameters/x-application-id"
          },
          {
            "name": "id",
            "in": "query",
            "description": "Identifiant technique de l'utilisateur",
            "required": false,
            "type": "string"
          },
          {
            "name": "email",
            "in": "query",
            "description": "Email de l'utilisateur",
            "required": false,
            "type": "string"
          },
          {
            "name": "embedded",
            "in": "query",
            "description": "value authtoken pour générer un token d'authentification, surrogation pour signifier que c'est une connexion par subrogation",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "authtoken",
                "surrogation"
              ]
            },
            "collectionFormat": "csv"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UserDto"
            }
          },
          "401": {
            "$ref": "#/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/responses/Forbidden"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          }
        }
      }
    },
    "/customers": {
      "get": {
        "tags": [
          "Clients"
        ],
        "summary": "Récupération des clients",
        "operationId": "getAllUsingGET",
        "parameters": [
          {
            "$ref": "#/parameters/x-tenant-id"
          },
          {
            "$ref": "#/parameters/x-user-token"
          },
          {
            "$ref": "#/parameters/x-application-id"
          },
          {
            "$ref": "#/parameters/criteria"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CustomerDto"
              }
            }
          },
          "401": {
            "$ref": "#/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/responses/Forbidden"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          }
        }
      },
      "post": {
        "tags": [
          "Clients"
        ],
        "summary": "Création d'un client",
        "operationId": "createUsingPOST",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/x-tenant-id"
          },
          {
            "$ref": "#/parameters/x-user-token"
          },
          {
            "$ref": "#/parameters/x-application-id"
          },
          {
            "in": "body",
            "name": "customer",
            "description": "Client à créer",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CustomerDto"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/CustomerDto"
            }
          },
          "401": {
            "$ref": "#/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/responses/Forbidden"
          }
        }
      }
    },
    "/customers/check": {
      "head": {
        "tags": [
          "Clients"
        ],
        "summary": "Vérification de l'existence d'un client",
        "operationId": "checkExistUsingHEAD",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/x-tenant-id"
          },
          {
            "$ref": "#/parameters/x-user-token"
          },
          {
            "$ref": "#/parameters/x-application-id"
          },
          {
            "$ref": "#/parameters/criteria"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "$ref": "#/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/responses/Forbidden"
          }
        }
      }
    },
    "/customers/gdpr-status": {
      "get": {
        "tags": [
          "Clients"
        ],
        "summary": "Get Gdpr Setting Status",
        "operationId": "getGdprSettingStatusUsingGET",
        "parameters": [
          {
            "name": "X-Application-Id",
            "in": "header",
            "description": "Identifiant unique utilisÃ© dans la gÃ©nÃ©ration des logs et des journaux VITAM",
            "required": false,
            "type": "string"
          },
          {
            "name": "X-Tenant-Id",
            "in": "header",
            "description": "Identifiant du tenant sur lequel doit Ãªtre exÃ©cutÃ© la requÃªte",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "X-User-Token",
            "in": "header",
            "description": "Identifiant technique du token gÃ©nÃ©rÃ© par le serveur CAS lors de l'authentification",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "boolean"
            }
          },
          "401": {
            "description": "La requÃªte n'est pas autorisÃ©e. Le X-User-Token n'est pas valide"
          },
          "403": {
            "description": "L'utilisateur ne possÃ¨de pas les droits pour effectuer cette opÃ©ration"
          },
          "404": {
            "description": "Non trouvÃ©e"
          }
        },
        "deprecated": false
      }
    },
    "/customers/me": {
      "get": {
        "tags": [
          "Clients"
        ],
        "summary": "Récupération du client courant",
        "operationId": "getMyCustomerUsingGET",
        "parameters": [
          {
            "$ref": "#/parameters/x-tenant-id"
          },
          {
            "$ref": "#/parameters/x-user-token"
          },
          {
            "$ref": "#/parameters/x-application-id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CustomerDto"
            }
          },
          "401": {
            "$ref": "#/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/responses/Forbidden"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          }
        }
      }
    },
    "/customers/{id}": {
      "get": {
        "tags": [
          "Clients"
        ],
        "summary": "Récupération d'un client",
        "operationId": "getOneUsingGET",
        "parameters": [
          {
            "$ref": "#/parameters/x-tenant-id"
          },
          {
            "$ref": "#/parameters/x-user-token"
          },
          {
            "$ref": "#/parameters/x-application-id"
          },
          {
            "name": "id",
            "in": "path",
            "description": "Identifiant technique du client",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CustomerDto"
            }
          },
          "401": {
            "$ref": "#/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/responses/Forbidden"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          }
        }
      },
      "put": {
        "tags": [
          "Clients"
        ],
        "summary": "Modification d'un client",
        "deprecated": true,
        "description": "L'API sera supprimée en V2",
        "operationId": "updateUsingPUT",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/x-tenant-id"
          },
          {
            "$ref": "#/parameters/x-user-token"
          },
          {
            "$ref": "#/parameters/x-application-id"
          },
          {
            "name": "id",
            "in": "path",
            "description": "Identifiant technique du client",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "customer",
            "description": "client",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CustomerDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CustomerDto"
            }
          },
          "401": {
            "$ref": "#/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/responses/Forbidden"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          }
        }
      },
      "patch": {
        "tags": [
          "Clients"
        ],
        "summary": "Modification partielle d'un client",
        "operationId": "patchUsingPATCH",
        "consumes": [
          "application/json",
          "multipart/form-data"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/x-tenant-id"
          },
          {
            "$ref": "#/parameters/x-user-token"
          },
          {
            "$ref": "#/parameters/x-application-id"
          },
          {
            "name": "id",
            "in": "path",
            "description": "Identifiant technique du client",
            "required": true,
            "type": "string"
          },
          {
            "name": "partialDto",
            "in": "formData",
            "description": "Map<string, object> qui contient une clé id avec l'id du client à modifier et une paire de clé/valeur pour chaque attribut du client à modifier",
            "required": true,
            "type": "string"
          },
          {
            "name": "logo",
            "in": "formData",
            "description": "Logo du client. Ce paramètre est optionnel et n'est présent que si la modification concerne l'identité graphique du client",
            "required": false,
            "type": "file"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CustomerDto"
            }
          },
          "401": {
            "$ref": "#/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/responses/Forbidden"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          }
        }
      }
    },
    "/customers/{id}/history": {
      "get": {
        "tags": [
          "Clients"
        ],
        "summary": "Récupération de l'historique d'un client",
        "operationId": "findHistoryByIdUsingGET",
        "parameters": [
          {
            "$ref": "#/parameters/x-tenant-id"
          },
          {
            "$ref": "#/parameters/x-user-token"
          },
          {
            "$ref": "#/parameters/x-application-id"
          },
          {
            "name": "id",
            "in": "path",
            "description": "Identifiant technique du client",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/JsonNode"
            }
          },
          "401": {
            "$ref": "#/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/responses/Forbidden"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          }
        }
      }
    },
    "/groups": {
      "get": {
        "tags": [
          "Groupes"
        ],
        "summary": "Récupération paginée des groupes",
        "operationId": "getAllPaginatedUsingGET_1",
        "parameters": [
          {
            "$ref": "#/parameters/x-tenant-id"
          },
          {
            "$ref": "#/parameters/x-user-token"
          },
          {
            "$ref": "#/parameters/x-application-id"
          },
          {
            "$ref": "#/parameters/criteria"
          },
          {
            "$ref": "#/parameters/orderBy"
          },
          {
            "$ref": "#/parameters/direction"
          },
          {
            "name": "embedded",
            "in": "query",
            "description": "Récupération des profiles associés",
            "required": false,
            "type": "string",
            "enum": [
              "ALL"
            ]
          },
          {
            "$ref": "#/parameters/page"
          },
          {
            "$ref": "#/parameters/size"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PaginatedValuesDto«GroupDto»"
            }
          },
          "401": {
            "$ref": "#/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/responses/Forbidden"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          }
        }
      },
      "post": {
        "tags": [
          "Groupes"
        ],
        "summary": "Création d'un groupe",
        "operationId": "createUsingPOST_1",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/x-tenant-id"
          },
          {
            "$ref": "#/parameters/x-user-token"
          },
          {
            "$ref": "#/parameters/x-application-id"
          },
          {
            "in": "body",
            "name": "groupe",
            "description": "Groupe à créer",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GroupDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GroupDto"
            }
          },
          "401": {
            "description": "La requête n'est pas autorisée. Le X-User-Token n'est pas valide"
          },
          "403": {
            "description": "L'utilisateur ne possède pas les droits pour effectuer cette opération"
          }
        }
      }
    },
    "/groups/check": {
      "head": {
        "tags": [
          "Groupes"
        ],
        "summary": "Vérification de l'existence d'un groupe",
        "operationId": "checkExistUsingHEAD_1",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/x-tenant-id"
          },
          {
            "$ref": "#/parameters/x-user-token"
          },
          {
            "$ref": "#/parameters/x-application-id"
          },
          {
            "$ref": "#/parameters/criteria"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "$ref": "#/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/responses/Forbidden"
          }
        }
      }
    },
    "/groups/levels": {
      "get": {
        "tags": [
          "Groupes"
        ],
        "summary": "Récupération des niveaux des groupes",
        "operationId": "getLevelsUsingGET",
        "parameters": [
          {
            "$ref": "#/parameters/x-tenant-id"
          },
          {
            "$ref": "#/parameters/x-user-token"
          },
          {
            "$ref": "#/parameters/x-application-id"
          },
          {
            "$ref": "#/parameters/criteria"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "401": {
            "$ref": "#/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/responses/Forbidden"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          }
        }
      }
    },
    "/groups/{id}": {
      "get": {
        "tags": [
          "Groupes"
        ],
        "summary": "Récupération d'un groupe",
        "operationId": "getOneUsingGET_1",
        "parameters": [
          {
            "$ref": "#/parameters/x-tenant-id"
          },
          {
            "$ref": "#/parameters/x-user-token"
          },
          {
            "$ref": "#/parameters/x-application-id"
          },
          {
            "name": "id",
            "in": "path",
            "description": "Identifiant technique du groupe",
            "required": true,
            "type": "string"
          },
          {
            "name": "embedded",
            "in": "query",
            "description": "Récupération des profiles du groupe",
            "required": false,
            "type": "string",
            "enum": [
              "ALL"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GroupDto"
            }
          },
          "401": {
            "$ref": "#/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/responses/Forbidden"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          }
        }
      },
      "patch": {
        "tags": [
          "Groupes"
        ],
        "summary": "Modification partielle d'un groupe",
        "operationId": "patchUsingPATCH_1",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/x-tenant-id"
          },
          {
            "$ref": "#/parameters/x-user-token"
          },
          {
            "$ref": "#/parameters/x-application-id"
          },
          {
            "name": "id",
            "in": "path",
            "description": "Identifiant technique du groupe",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "partialDto",
            "description": "Contient les champs à modifier ainsi que leurs nouvelles valeurs",
            "required": true,
            "schema": {
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GroupDto"
            }
          },
          "401": {
            "$ref": "#/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/responses/Forbidden"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          }
        }
      }
    },
    "/groups/{id}/history": {
      "get": {
        "tags": [
          "Groupes"
        ],
        "summary": "Récupération de l'historique d'un groupe",
        "operationId": "findHistoryByIdUsingGET_1",
        "parameters": [
          {
            "$ref": "#/parameters/x-tenant-id"
          },
          {
            "$ref": "#/parameters/x-user-token"
          },
          {
            "$ref": "#/parameters/x-application-id"
          },
          {
            "name": "id",
            "in": "path",
            "description": "Identifiant technique du groupe",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/JsonNode"
            }
          },
          "401": {
            "$ref": "#/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/responses/Forbidden"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          }
        }
      }
    },
    "/owners": {
      "post": {
        "tags": [
          "Propriétaires"
        ],
        "summary": "Création d'un propriétaire",
        "operationId": "createUsingPOST_3",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/x-tenant-id"
          },
          {
            "$ref": "#/parameters/x-user-token"
          },
          {
            "$ref": "#/parameters/x-application-id"
          },
          {
            "in": "body",
            "name": "owner",
            "description": "Un propriétaire",
            "required": true,
            "schema": {
              "$ref": "#/definitions/OwnerDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/OwnerDto"
            }
          },
          "401": {
            "$ref": "#/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/responses/Forbidden"
          }
        }
      }
    },
    "/owners/check": {
      "head": {
        "tags": [
          "Propriétaires"
        ],
        "summary": "Vérification de l'existence d'un propriétaire",
        "operationId": "checkExistUsingHEAD_3",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/x-tenant-id"
          },
          {
            "$ref": "#/parameters/x-user-token"
          },
          {
            "$ref": "#/parameters/x-application-id"
          },
          {
            "$ref": "#/parameters/criteria"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "$ref": "#/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/responses/Forbidden"
          }
        }
      }
    },
    "/owners/{id}": {
      "get": {
        "tags": [
          "Propriétaires"
        ],
        "summary": "Récupération d'un propriétaire",
        "operationId": "getOneUsingGET_3",
        "parameters": [
          {
            "$ref": "#/parameters/x-tenant-id"
          },
          {
            "$ref": "#/parameters/x-user-token"
          },
          {
            "$ref": "#/parameters/x-application-id"
          },
          {
            "name": "id",
            "in": "path",
            "description": "Identifiant technique d'un propriétaire",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/OwnerDto"
            }
          },
          "401": {
            "$ref": "#/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/responses/Forbidden"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          }
        }
      },
      "put": {
        "tags": [
          "Propriétaires"
        ],
        "summary": "Modification d'un propriétaire",
        "deprecated": true,
        "description": "L'API sera supprimée en V2",
        "operationId": "updateUsingPUT_1",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/x-tenant-id"
          },
          {
            "$ref": "#/parameters/x-user-token"
          },
          {
            "$ref": "#/parameters/x-application-id"
          },
          {
            "name": "id",
            "in": "path",
            "description": "Identifiant technique du propriétaire",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "owner",
            "description": "Un propriétaire",
            "required": true,
            "schema": {
              "$ref": "#/definitions/OwnerDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/OwnerDto"
            }
          },
          "401": {
            "$ref": "#/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/responses/Forbidden"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          }
        }
      },
      "patch": {
        "tags": [
          "Propriétaires"
        ],
        "summary": "Modification partielle d'un propriétaire",
        "operationId": "patchUsingPATCH_3",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/x-tenant-id"
          },
          {
            "$ref": "#/parameters/x-user-token"
          },
          {
            "$ref": "#/parameters/x-application-id"
          },
          {
            "name": "id",
            "in": "path",
            "description": "Identifiant technique du propriétaire",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "partialDto",
            "description": "Contient les champs à modifier ainsi que leurs nouvelles valeurs",
            "required": true,
            "schema": {
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/OwnerDto"
            }
          },
          "401": {
            "$ref": "#/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/responses/Forbidden"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          }
        }
      }
    },
    "/owners/{id}/history": {
      "get": {
        "tags": [
          "Propriétaires"
        ],
        "summary": "Récupération de l'historique d'un propriétaire",
        "operationId": "findHistoryByIdUsingGET_2",
        "parameters": [
          {
            "$ref": "#/parameters/x-tenant-id"
          },
          {
            "$ref": "#/parameters/x-user-token"
          },
          {
            "$ref": "#/parameters/x-application-id"
          },
          {
            "name": "id",
            "in": "path",
            "description": "Identifiant technique du propriétaire",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/JsonNode"
            }
          },
          "401": {
            "$ref": "#/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/responses/Forbidden"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          }
        }
      }
    },
    "/profiles": {
      "get": {
        "tags": [
          "Profils"
        ],
        "summary": "Récupération paginée des profils",
        "operationId": "getAllPaginatedUsingGET_2",
        "parameters": [
          {
            "$ref": "#/parameters/x-tenant-id"
          },
          {
            "$ref": "#/parameters/x-user-token"
          },
          {
            "$ref": "#/parameters/x-application-id"
          },
          {
            "$ref": "#/parameters/criteria"
          },
          {
            "$ref": "#/parameters/orderBy"
          },
          {
            "$ref": "#/parameters/direction"
          },
          {
            "name": "embedded",
            "in": "query",
            "description": "Récupération des compteurs usersCount, groupCount ainsi que le nom du tenant",
            "required": false,
            "type": "string",
            "enum": [
              "ALL"
            ]
          },
          {
            "$ref": "#/parameters/page"
          },
          {
            "$ref": "#/parameters/size"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PaginatedValuesDto«ProfileDto»"
            }
          },
          "401": {
            "$ref": "#/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/responses/Forbidden"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          }
        }
      },
      "post": {
        "tags": [
          "Profils"
        ],
        "summary": "Création d'un profil",
        "operationId": "createUsingPOST_4",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/x-tenant-id"
          },
          {
            "$ref": "#/parameters/x-user-token"
          },
          {
            "$ref": "#/parameters/x-application-id"
          },
          {
            "in": "body",
            "name": "profile",
            "description": "Un profile",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProfileDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ProfileDto"
            }
          },
          "401": {
            "$ref": "#/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/responses/Forbidden"
          }
        }
      }
    },
    "/profiles/check": {
      "head": {
        "tags": [
          "Profils"
        ],
        "summary": "Vérification de l'existence d'un profil",
        "operationId": "checkExistUsingHEAD_4",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/x-tenant-id"
          },
          {
            "$ref": "#/parameters/x-user-token"
          },
          {
            "$ref": "#/parameters/x-application-id"
          },
          {
            "$ref": "#/parameters/criteria"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "$ref": "#/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/responses/Forbidden"
          }
        }
      }
    },
    "/profiles/levels": {
      "get": {
        "tags": [
          "Profils"
        ],
        "summary": "Récupération des niveaux des profils",
        "operationId": "getLevelsUsingGET_1",
        "parameters": [
          {
            "$ref": "#/parameters/x-tenant-id"
          },
          {
            "$ref": "#/parameters/x-user-token"
          },
          {
            "$ref": "#/parameters/x-application-id"
          },
          {
            "$ref": "#/parameters/criteria"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "401": {
            "$ref": "#/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/responses/Forbidden"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          }
        }
      }
    },
    "/profiles/{id}": {
      "get": {
        "tags": [
          "Profils"
        ],
        "summary": "Récupération d'un profil",
        "operationId": "getOneUsingGET_4",
        "parameters": [
          {
            "$ref": "#/parameters/x-tenant-id"
          },
          {
            "$ref": "#/parameters/x-user-token"
          },
          {
            "$ref": "#/parameters/x-application-id"
          },
          {
            "name": "id",
            "in": "path",
            "description": "Identifiant technique du profile",
            "required": true,
            "type": "string"
          },
          {
            "name": "embedded",
            "in": "query",
            "description": "Récupération des compteurs usersCount, groupCount ainsi que le nom du tenant",
            "required": false,
            "type": "string",
            "enum": [
              "ALL"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ProfileDto"
            }
          },
          "401": {
            "$ref": "#/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/responses/Forbidden"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          }
        }
      },
      "patch": {
        "tags": [
          "Profils"
        ],
        "summary": "Modification partielle d'un profil",
        "operationId": "patchUsingPATCH_4",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/x-tenant-id"
          },
          {
            "$ref": "#/parameters/x-user-token"
          },
          {
            "$ref": "#/parameters/x-application-id"
          },
          {
            "name": "id",
            "in": "path",
            "description": "Identifiant technique du profil",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "partialDto",
            "description": "Contient les champs à modifier ainsi que leurs nouvelles valeurs",
            "required": true,
            "schema": {
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ProfileDto"
            }
          },
          "401": {
            "$ref": "#/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/responses/Forbidden"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          }
        }
      }
    },
    "/profiles/{id}/history": {
      "get": {
        "tags": [
          "Profils"
        ],
        "summary": "Récupération de l'historique d'un profil",
        "operationId": "findHistoryByIdUsingGET_3",
        "parameters": [
          {
            "$ref": "#/parameters/x-tenant-id"
          },
          {
            "$ref": "#/parameters/x-user-token"
          },
          {
            "$ref": "#/parameters/x-application-id"
          },
          {
            "name": "id",
            "in": "path",
            "description": "Identifiant technique du profil",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/JsonNode"
            }
          },
          "401": {
            "$ref": "#/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/responses/Forbidden"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          }
        }
      }
    },
    "/providers": {
      "get": {
        "tags": [
          "Fournisseur d'identités"
        ],
        "summary": "Récupération des fournisseurs d'identités",
        "operationId": "getAllUsingGET_2",
        "parameters": [
          {
            "$ref": "#/parameters/x-tenant-id"
          },
          {
            "$ref": "#/parameters/x-user-token"
          },
          {
            "$ref": "#/parameters/x-application-id"
          },
          {
            "$ref": "#/parameters/criteria"
          },
          {
            "name": "embedded",
            "in": "query",
            "description": "Récupération du keystore (base64) et des metadata",
            "required": false,
            "type": "string",
            "enum": [
              "KEYSTORE",
              "IDPMETADATA"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/IdentityProviderDto"
              }
            }
          },
          "401": {
            "$ref": "#/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/responses/Forbidden"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          }
        }
      },
      "post": {
        "tags": [
          "Fournisseur d'identités"
        ],
        "summary": "Création d'un fournisseur d'identité",
        "operationId": "createUsingPOST_2",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/x-tenant-id"
          },
          {
            "$ref": "#/parameters/x-user-token"
          },
          {
            "$ref": "#/parameters/x-application-id"
          },
          {
            "in": "body",
            "name": "idp",
            "description": "Un fournisseur d'identité",
            "required": true,
            "schema": {
              "$ref": "#/definitions/IdentityProviderDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/IdentityProviderDto"
            }
          },
          "401": {
            "$ref": "#/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/responses/Forbidden"
          }
        }
      }
    },
    "/providers/check": {
      "head": {
        "tags": [
          "Fournisseur d'identités"
        ],
        "summary": "Vérification de l'existence d'un fournisseur d'identité",
        "operationId": "checkExistUsingHEAD_2",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/x-tenant-id"
          },
          {
            "$ref": "#/parameters/x-user-token"
          },
          {
            "$ref": "#/parameters/x-application-id"
          },
          {
            "$ref": "#/parameters/criteria"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "$ref": "#/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/responses/Forbidden"
          }
        }
      }
    },
    "/providers/{id}": {
      "get": {
        "tags": [
          "Fournisseur d'identités"
        ],
        "summary": "Récupération d'un fournisseur d'identité",
        "operationId": "getOneUsingGET_2",
        "parameters": [
          {
            "$ref": "#/parameters/x-tenant-id"
          },
          {
            "$ref": "#/parameters/x-user-token"
          },
          {
            "$ref": "#/parameters/x-application-id"
          },
          {
            "name": "id",
            "in": "path",
            "description": "Identifiant technique d'un fournissuer d'identité",
            "required": true,
            "type": "string"
          },
          {
            "name": "embedded",
            "in": "query",
            "description": "Récupération du keystore (base64) et des metadata",
            "required": false,
            "type": "string",
            "enum": [
              "KEYSTORE",
              "IDPMETADATA"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/IdentityProviderDto"
            }
          },
          "401": {
            "$ref": "#/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/responses/Forbidden"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          }
        }
      },
      "patch": {
        "tags": [
          "Fournisseur d'identités"
        ],
        "summary": "Modification partielle d'un fournisseur d'identité",
        "operationId": "patchUsingPATCH_2",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/x-tenant-id"
          },
          {
            "$ref": "#/parameters/x-user-token"
          },
          {
            "$ref": "#/parameters/x-application-id"
          },
          {
            "name": "id",
            "in": "path",
            "description": "Identifiant technique du fournisseur d'identité",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "partialDto",
            "description": "Contient les champs à modifier ainsi que leurs nouvelles valeurs",
            "required": true,
            "schema": {
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/IdentityProviderDto"
            }
          },
          "401": {
            "$ref": "#/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/responses/Forbidden"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          }
        }
      }
    },
    "/subrogations": {
      "get": {
        "tags": [
          "Subrogations"
        ],
        "summary": "Récupération des subrogations",
        "operationId": "getAllUsingGET_4",
        "parameters": [
          {
            "$ref": "#/parameters/x-tenant-id"
          },
          {
            "$ref": "#/parameters/x-user-token"
          },
          {
            "$ref": "#/parameters/x-application-id"
          },
          {
            "$ref": "#/parameters/criteria"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SubrogationDto"
              }
            }
          },
          "401": {
            "$ref": "#/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/responses/Forbidden"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          }
        }
      },
      "post": {
        "tags": [
          "Subrogations"
        ],
        "summary": "Création d'une subrogation",
        "operationId": "createUsingPOST_5",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/x-tenant-id"
          },
          {
            "$ref": "#/parameters/x-user-token"
          },
          {
            "$ref": "#/parameters/x-application-id"
          },
          {
            "in": "body",
            "name": "subrogation",
            "description": "Une subrogation",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SubrogationDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SubrogationDto"
            }
          },
          "401": {
            "$ref": "#/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/responses/Forbidden"
          }
        }
      }
    },
    "/subrogations/groups/{id}": {
      "get": {
        "tags": [
          "Subrogations"
        ],
        "summary": "Récupération d'un groupe",
        "operationId": "getGroupByIdUsingGET",
        "parameters": [
          {
            "$ref": "#/parameters/x-tenant-id"
          },
          {
            "$ref": "#/parameters/x-user-token"
          },
          {
            "$ref": "#/parameters/x-application-id"
          },
          {
            "name": "id",
            "in": "path",
            "description": "Identifiant technique du groupe",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GroupDto"
            }
          },
          "401": {
            "$ref": "#/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/responses/Forbidden"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          }
        }
      }
    },
    "/subrogations/me/superuser": {
      "get": {
        "tags": [
          "Subrogations"
        ],
        "summary": "Récupération de ma subrogation en tant que subrogateur",
        "operationId": "getMySubrogationAsSuperuserUsingGET",
        "parameters": [
          {
            "$ref": "#/parameters/x-tenant-id"
          },
          {
            "$ref": "#/parameters/x-user-token"
          },
          {
            "$ref": "#/parameters/x-application-id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SubrogationDto"
            }
          },
          "401": {
            "$ref": "#/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/responses/Forbidden"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          }
        }
      }
    },
    "/subrogations/me/surrogate": {
      "get": {
        "tags": [
          "Subrogations"
        ],
        "summary": "Récupération de ma subrogation en tant que subrogé",
        "operationId": "getMySubrogationAsSurrogateUsingGET",
        "parameters": [
          {
            "$ref": "#/parameters/x-tenant-id"
          },
          {
            "$ref": "#/parameters/x-user-token"
          },
          {
            "$ref": "#/parameters/x-application-id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SubrogationDto"
            }
          },
          "401": {
            "$ref": "#/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/responses/Forbidden"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          }
        }
      }
    },
    "/subrogations/surrogate/accept/{id}": {
      "patch": {
        "tags": [
          "Subrogations"
        ],
        "summary": "Acceptation d'une subrogation par le subrogé",
        "operationId": "acceptUsingPATCH",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/x-tenant-id"
          },
          {
            "$ref": "#/parameters/x-user-token"
          },
          {
            "$ref": "#/parameters/x-application-id"
          },
          {
            "name": "id",
            "in": "path",
            "description": "Identifiant technique de la subrogation",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SubrogationDto"
            }
          },
          "401": {
            "$ref": "#/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/responses/Forbidden"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          }
        }
      }
    },
    "/subrogations/surrogate/decline/{id}": {
      "delete": {
        "tags": [
          "Subrogations"
        ],
        "summary": "Refus de la subrogation par le subrogé",
        "operationId": "declineUsingDELETE",
        "parameters": [
          {
            "$ref": "#/parameters/x-tenant-id"
          },
          {
            "$ref": "#/parameters/x-user-token"
          },
          {
            "$ref": "#/parameters/x-application-id"
          },
          {
            "name": "id",
            "in": "path",
            "description": "Identifiant technique de la subrogation",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/subrogations/users/generic": {
      "get": {
        "tags": [
          "Subrogations"
        ],
        "summary": "Récupération paginée des utilisateurs génériques",
        "operationId": "getGenericUsersUsingGET",
        "parameters": [
          {
            "$ref": "#/parameters/x-tenant-id"
          },
          {
            "$ref": "#/parameters/x-user-token"
          },
          {
            "$ref": "#/parameters/x-application-id"
          },
          {
            "$ref": "#/parameters/criteria"
          },
          {
            "$ref": "#/parameters/orderBy"
          },
          {
            "$ref": "#/parameters/direction"
          },
          {
            "$ref": "#/parameters/page"
          },
          {
            "$ref": "#/parameters/size"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PaginatedValuesDto«UserDto»"
            }
          },
          "401": {
            "$ref": "#/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/responses/Forbidden"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          }
        }
      }
    },
    "/subrogations/{id}": {
      "get": {
        "tags": [
          "Subrogations"
        ],
        "summary": "Récupération d'une subrogation",
        "operationId": "getOneUsingGET_5",
        "parameters": [
          {
            "$ref": "#/parameters/x-tenant-id"
          },
          {
            "$ref": "#/parameters/x-user-token"
          },
          {
            "$ref": "#/parameters/x-application-id"
          },
          {
            "name": "id",
            "in": "path",
            "description": "Identifiant technique de la subrogation",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SubrogationDto"
            }
          },
          "401": {
            "$ref": "#/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/responses/Forbidden"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          }
        }
      },
      "head": {
        "tags": [
          "Subrogations"
        ],
        "summary": "Vérification de l'existence d'une subrogation",
        "operationId": "checkExistUsingHEAD_5",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/x-tenant-id"
          },
          {
            "$ref": "#/parameters/x-user-token"
          },
          {
            "$ref": "#/parameters/x-application-id"
          },
          {
            "name": "id",
            "in": "path",
            "description": "Identifiant technique d'une subrogation",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "$ref": "#/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/responses/Forbidden"
          }
        }
      },
      "put": {
        "tags": [
          "Subrogations"
        ],
        "summary": "Modification d'une subrogation",
        "operationId": "updateUsingPUT_2",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/x-tenant-id"
          },
          {
            "$ref": "#/parameters/x-user-token"
          },
          {
            "$ref": "#/parameters/x-application-id"
          },
          {
            "name": "id",
            "in": "path",
            "description": "Identifiant technique de la subrogation",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "subrogation",
            "description": "Une subrogation",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SubrogationDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SubrogationDto"
            }
          },
          "401": {
            "$ref": "#/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/responses/Forbidden"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          }
        }
      },
      "delete": {
        "tags": [
          "Subrogations"
        ],
        "summary": "Suppression d'une subrogation",
        "operationId": "deleteUsingDELETE",
        "parameters": [
          {
            "$ref": "#/parameters/x-tenant-id"
          },
          {
            "$ref": "#/parameters/x-user-token"
          },
          {
            "$ref": "#/parameters/x-application-id"
          },
          {
            "name": "id",
            "in": "path",
            "description": "Identifiant technique de la subrogation",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/tenants": {
      "get": {
        "tags": [
          "Tenants"
        ],
        "summary": "Récupération des tenants",
        "operationId": "getAllUsingGET_5",
        "parameters": [
          {
            "$ref": "#/parameters/x-tenant-id"
          },
          {
            "$ref": "#/parameters/x-user-token"
          },
          {
            "$ref": "#/parameters/x-application-id"
          },
          {
            "$ref": "#/parameters/criteria"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TenantDto"
              }
            }
          },
          "401": {
            "$ref": "#/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/responses/Forbidden"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          }
        }
      },
      "post": {
        "tags": [
          "Tenants"
        ],
        "summary": "Création d'un tenant",
        "operationId": "createUsingPOST_6",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/x-tenant-id"
          },
          {
            "$ref": "#/parameters/x-user-token"
          },
          {
            "$ref": "#/parameters/x-application-id"
          },
          {
            "in": "body",
            "name": "tenant",
            "description": "Un tenant",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TenantDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TenantDto"
            }
          },
          "401": {
            "$ref": "#/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/responses/Forbidden"
          }
        }
      }
    },
    "/tenants/check": {
      "head": {
        "tags": [
          "Tenants"
        ],
        "summary": "Vérification de l'existence d'un tenant",
        "operationId": "checkExistUsingHEAD_6",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/x-tenant-id"
          },
          {
            "$ref": "#/parameters/x-user-token"
          },
          {
            "$ref": "#/parameters/x-application-id"
          },
          {
            "$ref": "#/parameters/criteria"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "$ref": "#/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/responses/Forbidden"
          }
        }
      }
    },
    "/tenants/{id}": {
      "get": {
        "tags": [
          "Tenants"
        ],
        "summary": "Récupération d'un tenant",
        "operationId": "getOneUsingGET_6",
        "parameters": [
          {
            "$ref": "#/parameters/x-tenant-id"
          },
          {
            "$ref": "#/parameters/x-user-token"
          },
          {
            "$ref": "#/parameters/x-application-id"
          },
          {
            "name": "id",
            "in": "path",
            "description": "Identifiant technique d'un tenant",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TenantDto"
            }
          },
          "401": {
            "$ref": "#/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/responses/Forbidden"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          }
        }
      },
      "put": {
        "tags": [
          "Tenants"
        ],
        "summary": "Modification d'un tenant",
        "operationId": "updateUsingPUT_3",
        "consumes": [
          "application/json"
        ],
        "deprecated": true,
        "description": "L'API sera supprimée en V2",
        "parameters": [
          {
            "$ref": "#/parameters/x-tenant-id"
          },
          {
            "$ref": "#/parameters/x-user-token"
          },
          {
            "$ref": "#/parameters/x-application-id"
          },
          {
            "name": "id",
            "in": "path",
            "description": "Identifiant technique d'un tenant",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "tenant",
            "description": "Un tenant",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TenantDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TenantDto"
            }
          },
          "401": {
            "$ref": "#/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/responses/Forbidden"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          }
        }
      },
      "patch": {
        "tags": [
          "Tenants"
        ],
        "summary": "Modification partielle d'un tenant",
        "operationId": "patchUsingPATCH_5",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/x-tenant-id"
          },
          {
            "$ref": "#/parameters/x-user-token"
          },
          {
            "$ref": "#/parameters/x-application-id"
          },
          {
            "name": "id",
            "in": "path",
            "description": "Identifiant technique du tenant",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "partialDto",
            "description": "Contient les champs à modifier ainsi que leurs nouvelles valeurs",
            "required": true,
            "schema": {
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TenantDto"
            }
          },
          "401": {
            "$ref": "#/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/responses/Forbidden"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          }
        }
      }
    },
    "/users": {
      "get": {
        "tags": [
          "Utilisateurs"
        ],
        "summary": "Récupération paginée des utilisateurs",
        "operationId": "getAllPaginatedUsingGET_3",
        "parameters": [
          {
            "$ref": "#/parameters/x-tenant-id"
          },
          {
            "$ref": "#/parameters/x-user-token"
          },
          {
            "$ref": "#/parameters/x-application-id"
          },
          {
            "$ref": "#/parameters/page"
          },
          {
            "$ref": "#/parameters/size"
          },
          {
            "$ref": "#/parameters/criteria"
          },
          {
            "$ref": "#/parameters/orderBy"
          },
          {
            "$ref": "#/parameters/direction"
          }
        ],
        "responses": {
          "200": {
            "description": "Liste paginée des utilisateurs",
            "schema": {
              "$ref": "#/definitions/PaginatedValuesDto«UserDto»"
            }
          },
          "401": {
            "$ref": "#/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/responses/Forbidden"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          }
        }
      },
      "post": {
        "tags": [
          "Utilisateurs"
        ],
        "summary": "Création d'un utilisateur",
        "operationId": "createUsingPOST_7",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/x-tenant-id"
          },
          {
            "$ref": "#/parameters/x-user-token"
          },
          {
            "$ref": "#/parameters/x-application-id"
          },
          {
            "in": "body",
            "name": "user",
            "description": "Utilisateur à créer",
            "required": false,
            "schema": {
              "$ref": "#/definitions/UserDto"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "L'utilisateur a été créé avec succès",
            "schema": {
              "$ref": "#/definitions/UserDto"
            }
          },
          "401": {
            "$ref": "#/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/responses/Forbidden"
          }
        }
      }
    },
    "/users/check": {
      "head": {
        "tags": [
          "Utilisateurs"
        ],
        "summary": "Vérification de l'existence d'un utilisateur",
        "operationId": "checkExistUsingHEAD_7",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/x-tenant-id"
          },
          {
            "$ref": "#/parameters/x-user-token"
          },
          {
            "$ref": "#/parameters/x-application-id"
          },
          {
            "name": "criteria",
            "in": "query",
            "description": "Critères de recherche",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Au moins un utilisateur existe"
          },
          "204": {
            "description": "Aucun utilisateur existe"
          },
          "401": {
            "$ref": "#/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/responses/Forbidden"
          }
        }
      }
    },
    "/users/levels": {
      "get": {
        "tags": [
          "Utilisateurs"
        ],
        "summary": "Récupération des niveaux des utilisateurs",
        "operationId": "getLevelsUsingGET_2",
        "parameters": [
          {
            "$ref": "#/parameters/x-tenant-id"
          },
          {
            "$ref": "#/parameters/x-user-token"
          },
          {
            "$ref": "#/parameters/x-application-id"
          },
          {
            "in": "body",
            "name": "criteria",
            "description": "Critères de recherche",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Liste des niveaux des utilisateurs",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "401": {
            "$ref": "#/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/responses/Forbidden"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          }
        }
      }
    },
    "/users/me": {
      "patch": {
        "tags": [
          "Utilisateurs"
        ],
        "summary": "Modification de l'utilisateur courant",
        "operationId": "patchMeUsingPATCH",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/x-tenant-id"
          },
          {
            "$ref": "#/parameters/x-user-token"
          },
          {
            "$ref": "#/parameters/x-application-id"
          },
          {
            "in": "body",
            "name": "partialDto",
            "description": "Les modifications à faire pour les champs contenu dans la map",
            "required": false,
            "schema": {
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Mon utilisateur modifié",
            "schema": {
              "$ref": "#/definitions/UserDto"
            }
          },
          "401": {
            "$ref": "#/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/responses/Forbidden"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "tags": [
          "Utilisateurs"
        ],
        "summary": "Récupération d'un utilisateur",
        "operationId": "getOneUsingGET_7",
        "parameters": [
          {
            "$ref": "#/parameters/x-tenant-id"
          },
          {
            "$ref": "#/parameters/x-user-token"
          },
          {
            "$ref": "#/parameters/x-application-id"
          },
          {
            "name": "id",
            "in": "path",
            "description": "Identifiant technique de l'utilisateur",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "L'utilisateur trouvé",
            "schema": {
              "$ref": "#/definitions/UserDto"
            }
          },
          "401": {
            "$ref": "#/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/responses/Forbidden"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          }
        }
      },
      "put": {
        "tags": [
          "Utilisateurs"
        ],
        "summary": "Modification d'un utilisateur",
        "description": "L'API sera supprimée en V2",
        "operationId": "updateUsingPUT_4",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/x-tenant-id"
          },
          {
            "$ref": "#/parameters/x-user-token"
          },
          {
            "$ref": "#/parameters/x-application-id"
          },
          {
            "name": "id",
            "in": "path",
            "description": "Identifiant technique de l'utilisateur",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "user",
            "description": "L'utilisateur modifié",
            "required": false,
            "schema": {
              "$ref": "#/definitions/UserDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "L'utilisateur modifié",
            "schema": {
              "$ref": "#/definitions/UserDto"
            }
          },
          "401": {
            "$ref": "#/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/responses/Forbidden"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          }
        },
        "deprecated": true
      },
      "patch": {
        "tags": [
          "Utilisateurs"
        ],
        "summary": "Modification partielle d'un utilisateur",
        "operationId": "patchUsingPATCH_6",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/x-tenant-id"
          },
          {
            "$ref": "#/parameters/x-user-token"
          },
          {
            "$ref": "#/parameters/x-application-id"
          },
          {
            "name": "id",
            "in": "path",
            "description": "Identifiant technique de l'utilisateur",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "partialDto",
            "description": "Contient les champs à modifier ainsi que leurs nouvelles valeurs",
            "required": false,
            "schema": {
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "l'utilisateur modifié",
            "schema": {
              "$ref": "#/definitions/UserDto"
            }
          },
          "401": {
            "$ref": "#/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/responses/Forbidden"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          }
        }
      }
    },
    "/users/{id}/history": {
      "get": {
        "tags": [
          "Utilisateurs"
        ],
        "summary": "Récupération de l'historique d'un utilisateur",
        "operationId": "findHistoryByIdUsingGET_4",
        "parameters": [
          {
            "$ref": "#/parameters/x-tenant-id"
          },
          {
            "$ref": "#/parameters/x-user-token"
          },
          {
            "$ref": "#/parameters/x-application-id"
          },
          {
            "name": "id",
            "in": "path",
            "description": "Identifiant technique de l'utilisateur",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Historique d'un utilisateur",
            "schema": {
              "$ref": "#/definitions/JsonNode"
            }
          },
          "401": {
            "$ref": "#/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/responses/Forbidden"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          }
        }
      }
    }
  },
  "responses": {
    "Unauthorized": {
      "description": "La requête n'est pas autorisée. Le X-User-Token n'est pas valide"
    },
    "Forbidden": {
      "description": "L'utilisateur ne possède pas les droits pour effectuer cette opération"
    },
    "NotFound": {
      "description": "Ressource non trouvée"
    }
  },
  "parameters": {
    "page": {
      "in": "query",
      "name": "page",
      "required": true,
      "minimum": 0,
      "type": "integer",
      "format": "int32",
      "description": "Numéro de la page"
    },
    "size": {
      "name": "size",
      "in": "query",
      "required": true,
      "minimum": 1,
      "type": "integer",
      "format": "int32",
      "description": "Nombre de résultats maximum"
    },
    "criteria": {
      "name": "criteria",
      "in": "query",
      "description": "Critères de recherche",
      "required": false,
      "type": "string"
    },
    "orderBy": {
      "name": "orderBy",
      "in": "query",
      "description": "Nom du champ sur lequel effectuer le tri",
      "required": false,
      "type": "string"
    },
    "direction": {
      "name": "direction",
      "in": "query",
      "description": "Direction pour le tri",
      "required": false,
      "type": "string",
      "enum": [
        "ASC",
        "DESC"
      ]
    },
    "x-tenant-id": {
      "name": "X-Tenant-Id",
      "in": "header",
      "description": "Identifiant du tenant sur lequel doit être exécuté la requête",
      "required": true,
      "type": "integer",
      "format": "int32"
    },
    "x-user-token": {
      "name": "X-User-Token",
      "in": "header",
      "description": "Identifiant technique du token généré par le serveur CAS lors de l'authentification",
      "required": true,
      "type": "string"
    },
    "x-application-id": {
      "name": "X-Application-Id",
      "in": "header",
      "description": "Identifiant unique utilisé dans la génération des logs et des journaux VITAM",
      "required": false,
      "type": "string"
    }
  },
  "definitions": {
    "AddressDto": {
      "type": "object",
      "properties": {
        "city": {
          "type": "string",
          "example": "Paris",
          "description": "Ville"
        },
        "country": {
          "type": "string",
          "example": "France",
          "description": "Pays"
        },
        "street": {
          "type": "string",
          "example": "43 avenue de la grande armée",
          "description": "Rue"
        },
        "zipCode": {
          "type": "string",
          "example": "75008",
          "description": "Code postal"
        }
      },
      "title": "AddressDto"
    },
    "ApplicationDto": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Identifiant technique",
          "example": "1",
          "readOnly": true
        },
        "identifier": {
          "type": "string",
          "description": "Identifiant métier",
          "example": "USERS_APP",
          "readOnly": true
        },
        "url": {
          "type": "string",
          "description": "URL de l'application",
          "example": "https://vitamui.com/user"
        }
      },
      "required": [
        "url"
      ],
      "title": "ApplicationDto"
    },
    "CustomerDto": {
      "type": "object",
      "properties": {
        "address": {
          "$ref": "#/definitions/AddressDto"
        },
        "gdprAlertDelay": {
          "type": "integer",
          "format": "int32",
          "minimum": 1,
          "example": "130",
          "description": "La durée d'alerte pour les notifications"
        },
        "gdprAlert": {
          "type": "boolean",
          "description": "Pour activer ou désactiver la récéeption des alertes"
        },
        "code": {
          "type": "string",
          "example": "1",
          "description": "Identifiant métier"
        },
        "companyName": {
          "type": "string",
          "example": "archiveco",
          "description": "Nom de la compagnie"
        },
        "defaultEmailDomain": {
          "type": "string",
          "example": "@archiveco.fr",
          "description": "Nom de domaine par défaut"
        },
        "emailDomains": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Ensemble des domaines",
          "example": [
            "@archiveo.fr",
            "@archiveco.com"
          ]
        },
        "enabled": {
          "type": "boolean",
          "example": "true",
          "description": "Actif ou inactif"
        },
        "id": {
          "type": "string",
          "description": "Identifiant technique",
          "example": "1",
          "readOnly": true
        },
        "identifier": {
          "type": "string",
          "example": "1",
          "description": "Identifiant métier",
          "readOnly": true
        },
        "language": {
          "type": "string",
          "enum": [
            "FRENCH",
            "ENGLISH",
            "GERMANY"
          ],
          "example": "FRENCH",
          "description": "Préférence de langue pour les utilisateurs du client"
        },
        "name": {
          "type": "string",
          "example": "archiveco",
          "description": "Nom du client"
        },
        "otp": {
          "type": "string",
          "enum": [
            "OPTIONAL",
            "DISABLED",
            "MANDATORY"
          ],
          "example": "OPTIONAL",
          "description": "Authentification en 2 étapes pour les utilisateurs du client"
        },
        "owners": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OwnerDto"
          },
          "description": "Propriétaires du client",
          "readOnly": true
        },
        "readonly": {
          "type": "boolean",
          "description": "Lecture seule",
          "example": true,
          "readOnly": true
        },
        "passwordRevocationDelay": {
          "type": "integer",
          "format": "int32",
          "example": "1",
          "description": "Durée de validitée des mot de passes pour les utilisateurs clients (exprimée en jours)"
        },
        "subrogeable": {
          "type": "boolean",
          "example": true,
          "description": "Utilisateur du client subrogeable ou non"
        },
        "hasCustomGraphicIdentity": {
          "type": "boolean"
        }
      },
      "required": [
        "code",
        "name",
        "companyName",
        "language",
        "passwordRevocationDelay",
        "otp",
        "emailDomains",
        "defaultEmailDomain",
        "address",
        "hasCustomGraphicIdentity"
      ],
      "title": "CustomerDto"
    },
    "GroupDto": {
      "type": "object",
      "properties": {
        "customerId": {
          "type": "string",
          "example": "1",
          "description": "Identifiant technique du client"
        },
        "description": {
          "type": "string",
          "example": "Groupe pour les utilisateurs RH"
        },
        "enabled": {
          "type": "boolean",
          "example": true,
          "description": "Actif ou Inactif"
        },
        "id": {
          "type": "string",
          "example": "1",
          "description": "Identifiant technique",
          "readOnly": true
        },
        "identifier": {
          "type": "string",
          "readOnly": true,
          "example": "1",
          "description": "Identifiant métier"
        },
        "level": {
          "type": "string",
          "example": "",
          "description": "Niveau"
        },
        "name": {
          "type": "string",
          "example": "Groupe RH",
          "description": "Nom"
        },
        "profileIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "example": [
            "1",
            "2",
            "3"
          ],
          "description": "Ensemble des identifiants technique des profils contenu dans le groupe"
        },
        "profiles": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProfileDto"
          },
          "description": "Ensemble des profiles du groupe",
          "readOnly": true
        },
        "readonly": {
          "type": "boolean",
          "description": "Lecture seule",
          "example": true,
          "readOnly": true
        },
        "usersCount": {
          "type": "integer",
          "format": "int64",
          "readOnly": true,
          "description": "Nombre d'utilisateurs contenu dans le groupe"
        }
      },
      "required": [
        "customerId",
        "name",
        "description",
        "profilleIds"
      ],
      "title": "GroupDto"
    },
    "IdentityProviderDto": {
      "type": "object",
      "properties": {
        "customerId": {
          "type": "string",
          "example": "1",
          "description": "Identifiant technique du client"
        },
        "enabled": {
          "type": "boolean",
          "example": true,
          "description": "Actif ou Inactif"
        },
        "id": {
          "type": "string",
          "example": "1",
          "description": "Identifiant technique"
        },
        "identifier": {
          "type": "string",
          "readOnly": true,
          "example": "1",
          "description": "Identifiant métier"
        },
        "idpMetadata": {
          "type": "string",
          "description": "Metadata"
        },
        "internal": {
          "type": "boolean",
          "example": true,
          "description": "Authentification déléguée ou non"
        },
        "keystoreBase64": {
          "type": "string",
          "description": "Keystore en base64"
        },
        "keystorePassword": {
          "type": "string",
          "example": "password",
          "description": "Mot de passe"
        },
        "maximumAuthenticationLifetime": {
          "type": "integer",
          "format": "int32",
          "description": "Durée maximum de validitée de l'authentification (exprimée en secondes)",
          "example": "86400"
        },
        "name": {
          "type": "string",
          "example": "google_id",
          "description": "Nom"
        },
        "patterns": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Regexp utilisée pour la décision par le serveur CAS de l'IDP à utiliser",
          "example": [
            ".*@archiveco.fr"
          ]
        },
        "privateKeyPassword": {
          "type": "string",
          "example": "password",
          "description": "Mot de passe de la clé privée"
        },
        "readonly": {
          "type": "boolean",
          "description": "Lecture seule",
          "example": true,
          "readOnly": true
        },
        "spMetadata": {
          "type": "string",
          "readOnly": true
        },
        "technicalName": {
          "type": "string",
          "description": "Nom technique",
          "example": "idparchiveco"
        }
      },
      "required": [
        "customerId",
        "name",
        "internal",
        "enabled",
        "technicalName"
      ],
      "title": "IdentityProviderDto"
    },
    "JsonNode": {
      "type": "object",
      "properties": {
        "array": {
          "type": "boolean"
        },
        "bigDecimal": {
          "type": "boolean"
        },
        "bigInteger": {
          "type": "boolean"
        },
        "binary": {
          "type": "boolean"
        },
        "boolean": {
          "type": "boolean"
        },
        "containerNode": {
          "type": "boolean"
        },
        "double": {
          "type": "boolean"
        },
        "float": {
          "type": "boolean"
        },
        "floatingPointNumber": {
          "type": "boolean"
        },
        "int": {
          "type": "boolean"
        },
        "integralNumber": {
          "type": "boolean"
        },
        "long": {
          "type": "boolean"
        },
        "missingNode": {
          "type": "boolean"
        },
        "nodeType": {
          "type": "string",
          "enum": [
            "ARRAY",
            "BINARY",
            "BOOLEAN",
            "MISSING",
            "NULL",
            "NUMBER",
            "OBJECT",
            "POJO",
            "STRING"
          ]
        },
        "null": {
          "type": "boolean"
        },
        "number": {
          "type": "boolean"
        },
        "object": {
          "type": "boolean"
        },
        "pojo": {
          "type": "boolean"
        },
        "short": {
          "type": "boolean"
        },
        "textual": {
          "type": "boolean"
        },
        "valueNode": {
          "type": "boolean"
        }
      },
      "title": "JsonNode"
    },
    "LoginRequestDto": {
      "type": "object",
      "properties": {
        "ip": {
          "type": "string",
          "example": "192.168.1.0",
          "description": "Addresse IP de l'utilisateur"
        },
        "password": {
          "type": "string",
          "example": "password",
          "description": "Mot de passe saisie par l'utilisateur"
        },
        "surrogate": {
          "type": "string",
          "example": "surrogate@archiveco.fr",
          "description": "Adresse mail de l'utilisateur à subroger"
        },
        "username": {
          "type": "string",
          "example": "toto@archiveco.fr",
          "description": "Adresse mail saisie par l'utilisateur"
        }
      },
      "required": [
        "username",
        "password"
      ],
      "title": "LoginRequestDto"
    },
    "OwnerDto": {
      "type": "object",
      "properties": {
        "address": {
          "$ref": "#/definitions/AddressDto"
        },
        "code": {
          "type": "string",
          "example": "1",
          "description": "Identifiant métier"
        },
        "companyName": {
          "type": "string",
          "example": "archiveco",
          "description": "Nom de la compagnie"
        },
        "customerId": {
          "type": "string",
          "example": "1",
          "description": "Identifiant technique du client"
        },
        "id": {
          "type": "string",
          "example": "1",
          "description": "Identifiant technique",
          "readOnly": true
        },
        "identifier": {
          "type": "string",
          "readOnly": true,
          "example": "1",
          "description": "Identifiant métier"
        },
        "name": {
          "type": "string",
          "description": "Nom",
          "example": "toto"
        },
        "readonly": {
          "type": "boolean",
          "description": "Lecture seule",
          "example": true,
          "readOnly": true
        }
      },
      "required": [
        "customerId",
        "code",
        "name",
        "description",
        "companyName"
      ],
      "title": "OwnerDto"
    },
    "PaginatedValuesDto«CustomerDto»": {
      "type": "object",
      "properties": {
        "hasMore": {
          "type": "boolean",
          "example": true,
          "description": "Présence de résultats supplémentaires"
        },
        "pageNum": {
          "type": "integer",
          "format": "int32",
          "example": 0,
          "description": "Numéro de la page"
        },
        "pageSize": {
          "type": "integer",
          "format": "int32",
          "example": 20,
          "description": "Taille de la page"
        },
        "values": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomerDto"
          },
          "description": "Résultats"
        }
      },
      "title": "PaginatedValuesDto«CustomerDto»"
    },
    "PaginatedValuesDto«GroupDto»": {
      "type": "object",
      "properties": {
        "hasMore": {
          "type": "boolean",
          "example": true,
          "description": "Présence de résultats supplémentaires"
        },
        "pageNum": {
          "type": "integer",
          "format": "int32",
          "example": 0,
          "description": "Numéro de la page"
        },
        "pageSize": {
          "type": "integer",
          "format": "int32",
          "example": 20,
          "description": "Taille de la page"
        },
        "values": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GroupDto"
          },
          "description": "Résultats"
        }
      },
      "title": "PaginatedValuesDto«GroupDto»"
    },
    "PaginatedValuesDto«ProfileDto»": {
      "type": "object",
      "properties": {
        "hasMore": {
          "type": "boolean",
          "example": true,
          "description": "Présence de résultats supplémentaires"
        },
        "pageNum": {
          "type": "integer",
          "format": "int32",
          "example": 0,
          "description": "Numéro de la page"
        },
        "pageSize": {
          "type": "integer",
          "format": "int32",
          "example": 20,
          "description": "Taille de la page"
        },
        "values": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProfileDto"
          },
          "description": "Résultats"
        }
      },
      "title": "PaginatedValuesDto«ProfileDto»"
    },
    "PaginatedValuesDto«UserDto»": {
      "type": "object",
      "properties": {
        "hasMore": {
          "type": "boolean",
          "example": true,
          "description": "Présence de résultats supplémentaires"
        },
        "pageNum": {
          "type": "integer",
          "format": "int32",
          "example": 0,
          "description": "Numéro de la page"
        },
        "pageSize": {
          "type": "integer",
          "format": "int32",
          "example": 20,
          "description": "Taille de la page"
        },
        "values": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UserDto"
          },
          "description": "Résultats"
        }
      },
      "title": "PaginatedValuesDto«UserDto»"
    },
    "ProfileDto": {
      "type": "object",
      "properties": {
        "applicationName": {
          "type": "string",
          "description": "Identifiant de l'application métier",
          "example": "USERS_APP"
        },
        "customerId": {
          "type": "string",
          "example": "1",
          "description": "Identifiant technique du client"
        },
        "description": {
          "type": "string",
          "example": "profile des droits utilisateurs",
          "description": "Description"
        },
        "enabled": {
          "type": "boolean",
          "example": true,
          "description": "Actif ou Inactif"
        },
        "externalParamId": {
          "type": "string",
          "description": "Identifier technique d'un paramètre extérieur"
        },
        "externalParamIdentifier": {
          "type": "string",
          "description": "Identifier métier d'un paramètre extérieur"
        },
        "groupsCount": {
          "type": "integer",
          "format": "int64",
          "readOnly": true,
          "example": 2,
          "description": "Nombre de groupe contenant ce profile"
        },
        "id": {
          "type": "string",
          "example": "1",
          "description": "Identifiant technique",
          "readOnly": true
        },
        "identifier": {
          "type": "string",
          "readOnly": true,
          "example": "1",
          "description": "Identifiant métier"
        },
        "level": {
          "type": "string",
          "example": "",
          "description": "Niveau"
        },
        "name": {
          "type": "string",
          "description": "Nom",
          "example": "ProfileRH"
        },
        "readonly": {
          "type": "boolean",
          "description": "Lecture seule",
          "example": true,
          "readOnly": true
        },
        "roles": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Role"
          },
          "description": "Ensemble des rôles"
        },
        "tenantIdentifier": {
          "type": "integer",
          "format": "int32",
          "example": "1",
          "description": "Identifiant métier du tenant"
        },
        "tenantName": {
          "type": "string",
          "description": "Nom du tenant",
          "example": "Tenant 1",
          "readOnly": true
        },
        "usersCount": {
          "type": "integer",
          "format": "int64",
          "example": 10,
          "description": "Nombre d'utilisateurs",
          "readOnly": true
        }
      },
      "required": [
        "customerId",
        "name",
        "description",
        "applicationName",
        "tenantIdentifier"
      ],
      "title": "ProfileDto"
    },
    "Role": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "ROLE_CREATE_USERS",
          "description": "Nom du rôle"
        }
      },
      "required": [
        "name"
      ],
      "title": "Role"
    },
    "SubrogationDto": {
      "type": "object",
      "properties": {
        "date": {
          "type": "string",
          "format": "date-time",
          "description": "Date de fin de la subrogation"
        },
        "id": {
          "type": "string",
          "example": "1",
          "description": "Identifiant technique",
          "readOnly": true
        },
        "status": {
          "type": "string",
          "enum": [
            "CREATED",
            "ACCEPTED"
          ],
          "description": "Statut",
          "example": "CREATED"
        },
        "superUser": {
          "type": "string",
          "description": "Email de l'utilisateur subrogateur",
          "example": "superuser@arhiveco.fr"
        },
        "superUserCustomerId": {
          "type": "string",
          "description": "Identifiant métier du client de l'utilisateur subrogateur",
          "example": "1"
        },
        "surrogate": {
          "type": "string",
          "description": "Email de l'utilisateur subrogée",
          "example": "surrogate@archiveco.fr"
        },
        "surrogateCustomerId": {
          "type": "string",
          "description": "Identifiant métier du client de l'utilisateur subrogée",
          "example": "1"
        }
      },
      "required": [
        "status",
        "surrogate",
        "superUser"
      ],
      "title": "SubrogationDto"
    },
    "TenantDto": {
      "type": "object",
      "properties": {
        "accessContractHoldingIdentifier": {
          "type": "string",
          "description": "Identifiant technique du contrat d'accès utilisé pour la gestion de l'arbre",
          "example": "AC-00002"
        },
        "accessContractLogbookIdentifier": {
          "type": "string",
          "description": "Identifiant technique du contrat d'accès utilisé pour accèder aux logbook VITAM",
          "example": "AC-00001"
        },
        "customerId": {
          "type": "string",
          "example": "1",
          "description": "Identifiant technique du client"
        },
        "enabled": {
          "type": "boolean",
          "example": true,
          "description": "Actif ou Inactif"
        },
        "id": {
          "type": "string",
          "example": "1",
          "description": "Identifiant technique",
          "readOnly": true
        },
        "identifier": {
          "type": "integer",
          "format": "int32",
          "example": 1,
          "description": "Identifiant technique du tenant VITAM"
        },
        "ingestContractHoldingIdentifier": {
          "type": "string",
          "example": "IC-00002",
          "description": "Identifiant technique du contrat d'éntrée utilisé pour la gestion de l'arbre"
        },
        "itemIngestContractIdentifier": {
          "type": "string",
          "example": "IC-00001",
          "description": "Identifiant technique du contrat d'éntrée utilisé pour l'envoi de documents dans VITAM"
        },
        "name": {
          "type": "string",
          "example": "tenant 10",
          "description": "Nom"
        },
        "ownerId": {
          "type": "string",
          "example": "1",
          "description": "Identifiant technique du propriétaire"
        },
        "proof": {
          "type": "boolean",
          "example": true,
          "description": "Tenant générée automatiquement lors de la création d'un client"
        },
        "readonly": {
          "type": "boolean",
          "description": "Lecture seule",
          "example": true,
          "readOnly": true
        }
      },
      "required": [
        "customerId",
        "enabled",
        "name"
      ],
      "title": "TenantDto"
    },
    "UserDto": {
      "type": "object",
      "properties": {
        "customerId": {
          "type": "string",
          "example": "1",
          "description": "Identifiant technique du client"
        },
        "email": {
          "type": "string",
          "example": "toto@example.fr",
          "description": "Adresse mail"
        },
        "firstname": {
          "type": "string",
          "example": "toto",
          "description": "Prénom"
        },
        "groupId": {
          "type": "string",
          "example": "1",
          "description": "Identifiant technique du groupe"
        },
        "id": {
          "type": "string",
          "example": "1",
          "description": "Identifiant technique",
          "readOnly": true
        },
        "identifier": {
          "type": "string",
          "readOnly": true,
          "example": "1",
          "description": "Identifiant métier"
        },
        "language": {
          "type": "string",
          "enum": [
            "FR",
            "DE",
            "EN"
          ],
          "description": "Langue"
        },
        "lastConnection": {
          "type": "string",
          "format": "date-time",
          "description": "Date de la derniére connexion de l'utilisateur au format ISO-8601"
        },
        "lastname": {
          "type": "string",
          "example": "DUPONT",
          "description": "Nom de famille"
        },
        "level": {
          "type": "string",
          "example": " ",
          "description": "Niveau"
        },
        "mobile": {
          "type": "string",
          "example": "+33667678250",
          "description": "Numéro de téléphone portable au format international"
        },
        "nbFailedAttempts": {
          "type": "integer",
          "format": "int32",
          "description": "Nombre de tantive échouée depuis la dernière connexion réussie"
        },
        "otp": {
          "type": "boolean",
          "description": "Double authentification activée ou non"
        },
        "passwordExpirationDate": {
          "type": "string",
          "format": "date-time",
          "description": "Date d'expiration du mot de passe"
        },
        "phone": {
          "type": "string",
          "example": "+33145868450",
          "description": "Numéro de téléphone fixe au format international"
        },
        "readonly": {
          "type": "boolean",
          "description": "Lecture seule",
          "example": true,
          "readOnly": true
        },
        "desactivationDate": {
          "type": "string",
          "format": "date-time",
          "description": "Date de désactivation de l'utilisateur"
        },
        "removingDate": {
          "type": "string",
          "format": "date-time",
          "description": "Date de suppression de l'utilisateur"
        },
        "status": {
          "type": "string",
          "enum": [
            "ENABLED",
            "DISABLED",
            "REMOVED",
            "BLOCKED",
            "ANONYM"
          ],
          "description": "Statut"
        },
        "subrogeable": {
          "type": "boolean",
          "description": "Subrogeable"
        },
        "type": {
          "type": "string",
          "enum": [
            "GENERIC",
            "NOMINATIVE"
          ],
          "description": "Type"
        }
      },
      "required": [
        "customerId",
        "lastname",
        "firstname",
        "groupId",
        "language",
        "email"
      ],
      "title": "UserDto"
    }
  }
}
