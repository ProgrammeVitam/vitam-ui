name: Build and test
run-name: Building and testing branch ${{ github.ref }}
on:
  pull_request: # run on every pull request
  push:
    branches: # run only on protected branches (develop & master_*)
      - develop
      - master_*
jobs:
  build-frontend:
    name: Build Frontend
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: "16.20.2"
          cache: "npm"
          cache-dependency-path: |
            ui/ui-frontend/package-lock.json
      - name: Install ui-frontend dependencies
        working-directory: ui/ui-frontend
        run: npm ci
      - name: Build vitamui-library
        working-directory: ui/ui-frontend
        run: npm run build:vitamui-library
      - name: Build ui-frontend apps
        working-directory: ui/ui-frontend
        run: npm run build:allModules
      - name: Run tests on ui-frontend apps
        working-directory: ui/ui-frontend
        run: npm run ci:test
      - name: Save JUnit report as artifact
        uses: mikepenz/action-junit-report@v4
        if: success() || failure() # always run even if the previous step fails
        with:
          report_paths: |
            **/target/junit/*.xml
          check_name: Frontend Test Report
      - name: Save test & coverage reports as artifact
        if: success() || failure() # always run even if the previous step fails
        uses: actions/upload-artifact@v4
        with:
          name: frontend-test-reports
          path: |
            **/target/junit/*.xml
            **/target/coverage/*
  build-backend:
    name: Build Backend
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: "11"
          cache: "maven"
      - uses: szenius/set-timezone@v2.0
        with:
          timezoneLinux: "Europe/Paris" # we set the timezone for Unit Tests to pass (we shouldn't need to, but it's currently required)
      - name: Build and test
        run: >
          mvn --settings .ci/settings.xml
          -Pvitam,no-cve-proxy
          -Dspotless.check.skip=true
          --batch-mode --errors -U
          --projects '!cots/vitamui-mongo-express'
          --projects '!ui'
          --projects '!ui/ui-frontend'
          verify
        env:
          SERVICE_NEXUS_URL: ${{ secrets.SERVICE_NEXUS_URL }}
          CI_USR: ${{ secrets.CI_USR }}
          CI_PSW: ${{ secrets.CI_PSW }}
      - name: Save JUnit report as artifact
        uses: mikepenz/action-junit-report@v4
        if: success() || failure() # always run even if the previous step fails
        with:
          report_paths: |
            **/target/surefire-reports/*.xml
          check_name: Backend Test Report
      - name: Save test & coverage reports as artifact
        if: success() || failure() # always run even if the previous step fails
        uses: actions/upload-artifact@v4
        with:
          name: backend-test-reports
          path: |
            **/target/surefire-reports/*.xml
            **/target/site/jacoco/jacoco.xml
      - name: Save generated classes as (temporary) artifact for SonarCloud analysis
        if: ${{ github.event_name == 'push' && github.ref_protected }} # only save generated classes when executing SonarCloud analysis
        uses: actions/upload-artifact@v4
        with:
          name: backend-generated-classes
          path: |
            **/target/classes/**/*
            **/target/test-classes/**/*
  sonarcloud:
    name: Run SonarCloud analysis
    needs: [build-frontend, build-backend]
    if: ${{ github.event_name == 'push' && github.ref_protected }} # only run SonarCloud analysis on protected branches
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Download frontend test reports
        uses: actions/download-artifact@v4
        with:
          name: frontend-test-reports
      - name: Download backend test reports
        uses: actions/download-artifact@v4
        with:
          name: backend-test-reports
      - name: Download backend target directories
        uses: actions/download-artifact@v4
        with:
          name: backend-generated-classes
      - name: SonarCloud Scan
        uses: sonarsource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      - name: Delete temporary artifact
        uses: geekyeggo/delete-artifact@v5
        if: success() || failure() # always run even if the previous step fails
        with:
          name: backend-generated-classes
